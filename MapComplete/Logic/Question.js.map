{"version":3,"sources":["UI/UIElement.ts","Logic/Question.ts"],"names":[],"mappings":"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","file":"Question.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\nimport {Playground} from \"../Layers/Playground\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n    public readonly _source: UIEventSource<any>;\n    \n    private _hideIfEmpty = false;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        this._source = source;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if (source === undefined) {\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    private _onClick: () => void;\n\n    public onClick(f: (() => void)) {\n        this._onClick = f;\n        this.Update();\n    }\n\n    Update(): void {\n        let element = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n\n        element.innerHTML = this.InnerRender();\n        if (this._hideIfEmpty) {\n            if (element.innerHTML === \"\") {\n                element.parentElement.style.display = \"none\";\n            } else {\n                element.parentElement.style.display = undefined;\n            }\n        }\n\n        if (this._onClick !== undefined) {\n            console.log(\"Registering\")\n            const self = this;\n            element.onclick = () => {\n                console.log(\"Clicked!\")\n                self._onClick();\n            }\n            element.style.cursor = \"pointer\";\n        }\n\n        this.InnerUpdate(element);\n    }\n    \n    HideOnEmpty(hide : boolean){\n        this._hideIfEmpty = hide;\n        this.Update();\n        return this;\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    InnerUpdate(htmlElement : HTMLElement){}\n\n    Render(): string {\n        return \"<span class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</span>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        if(element === null){\n            console.log(\"SEVERE: could not attach UIElement to \", divId);\n            return;\n        }\n        element.innerHTML = this.Render();\n        this.Update();\n        return this;\n    }\n\n    protected abstract InnerRender(): string;\n    public Activate(): void {};\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","import {Changes} from \"./Changes\";\nimport {UIElement} from \"../UI/UIElement\";\nimport {UIEventSource} from \"../UI/UIEventSource\";\n\nexport class QuestionUI extends UIElement {\n    private readonly _q: Question;\n    private readonly _tags: UIEventSource<any>;\n    /**\n     * The ID of the calling question - used to trigger it's onsave\n     */\n    private readonly _qid;\n\n    constructor(q: Question, qid: number, tags: UIEventSource<any>) {\n        super(tags);\n        this._q = q;\n        this._tags = tags;\n        this._qid = qid;\n    }\n\n\n    private RenderRadio() {\n        let radios = \"\";\n        let c = 0;\n        for (let answer of this._q.question.answers) {\n            const human = answer.text;\n            const ansId = \"q\" + this._qid + \"-answer\" + c;\n            radios +=\n                \"<input type='radio' name='q\" + this._qid + \"' id='\" + ansId + \"' value='\" + c + \"' />\" +\n                \"<label for='\" + ansId + \"'>\" + human + \"</label>\" +\n                \"<br />\";\n            c++;\n        }\n        return radios;\n    }\n\n    private RenderRadioText() {\n        let radios = \"\";\n        let c = 0;\n        for (let answer of this._q.question.answers) {\n            const human = answer.text;\n            const ansId = \"q\" + this._qid + \"-answer\" + c;\n            radios +=\n                \"<input type='radio' name='q\" + this._qid + \"' id='\" + ansId + \"' value='\" + c + \"' />\" +\n                \"<label for='\" + ansId + \"'>\" + human + \"</label>\" +\n                \"<br />\";\n            c++;\n        }\n        const ansId = \"q\" + this._qid + \"-answer\" + c;\n\n        radios +=\n            \"<input type='radio' name='q\" + this._qid + \"' id='\" + ansId + \"' value='\" + c + \"' />\" +\n            \"<label for='\" + ansId + \"'><input type='text' id='q-\" + this._qid + \"-textbox' onclick='checkRadioButton(\\\"\" + ansId + \"\\\")'/></label>\" +\n            \"<br />\";\n\n        return radios;\n    }\n\n\n    InnerRender(): string {\n\n        if (!this._q.Applicable(this._tags.data)) {\n            return \"\";\n        }\n\n\n        const q = this._q.question;\n\n\n        let answers = \"\";\n        if (q.type == \"radio\") {\n            answers += this.RenderRadio();\n        } else if (q.type == \"text\") {\n            answers += \"<input type='text' id='q-\" + this._qid + \"-textbox'/><br/>\"\n        } else if (q.type == \"radio+text\") {\n            answers += this.RenderRadioText();\n        } else {\n            alert(\"PLZ RENDER TYPE \" + q.type);\n        }\n\n\n        const embeddedScriptSave = 'questionAnswered(' + this._qid + ', \"' + this._tags.data.id + '\", false )';\n        const embeddedScriptSkip = 'questionAnswered(' + this._qid + ', \"' + this._tags.data.id + '\", true )';\n        const saveButton = \"<input class='save-button' type='button' onclick='\" + embeddedScriptSave + \"' value='Opslaan' />\";\n        const skip = \"<input class='skip-button' type='button' onclick='\" + embeddedScriptSkip + \"' value='Ik ben niet zeker (vraag overslaan)' />\";\n        return q.question + \"<br/>  \" + answers + saveButton + skip;\n    }\n\n    InnerUpdate(htmlElement: HTMLElement) {\n    }\n}\n\n\nexport class QuestionDefinition {\n\n\n    static noNameOrNameQuestion(question: string, noExplicitName : string, severity : number) : QuestionDefinition{\n        const q = new QuestionDefinition(question);\n        \n        q.type = 'radio+text';\n        q.addAnwser(noExplicitName, \"noname\",\"yes\");\n        q.addUnrequiredTag(\"name\", \"*\");\n        q.addUnrequiredTag(\"noname\", \"yes\");\n        \n        q.key = \"name\";\n        q.severity = severity;\n        return q;\n    }\n    \n    static textQuestion(\n        question: string,\n        key: string,\n        severity: number\n    ): QuestionDefinition {\n        const q = new QuestionDefinition(question);\n        q.type = 'text';\n        q.key = key;\n        q.severity = severity;\n        q.addUnrequiredTag(key, '*');\n        return q;\n    }\n\n    static radioQuestionSimple(\n        question: string,\n        severity: number,\n        key: string,\n        answers: { text: string, value: string }[]) {\n\n\n        const answers0: {\n            text: string,\n            tags: { k: string, v: string }[],\n        }[] = [];\n        for (const i in answers) {\n            const answer = answers[i];\n            answers0.push({text: answer.text, tags: [{k: key, v: answer.value}]})\n        }\n\n        var q = this.radioQuestion(question, severity, answers0);\n        q.key = key;\n        q.addUnrequiredTag(key, '*');\n        return q;\n    }\n\n    static radioAndTextQuestion(\n        question: string,\n        severity: number,\n        key: string,\n        answers: { text: string, value: string }[]) {\n\n        const q = this.radioQuestionSimple(question, severity, key, answers);\n        q.type = 'radio+text';\n        return q;\n\n    }\n\n    static radioQuestion(\n        question: string,\n        severity: number,\n        answers:\n            {\n                text: string,\n                tags: { k: string, v: string }[],\n            }[]\n    ): QuestionDefinition {\n\n\n        const q = new QuestionDefinition(question);\n        q.severity = severity;\n        q.type = 'radio';\n        q.answers = answers;\n        for (const i in answers) {\n            const answer = answers[i];\n            for (const j in answer.tags) {\n                const tag = answer.tags[j];\n                q.addUnrequiredTag(tag.k, tag.v);\n            }\n        }\n\n        return q;\n    }\n\n\n    static GrbNoNumberQuestion() : QuestionDefinition{\n        const q = new QuestionDefinition(\"Heeft dit gebouw een huisnummer?\");\n        q.type = \"radio\";\n        q.severity = 10;\n        q.answers = [{\n            text: \"Ja, het OSM-huisnummer is correct\",\n            tags: [{k: \"fixme\", v: \"\"}]\n        }, {\n\n            text: \"Nee, het is een enkele garage\",\n            tags: [{k: \"building\", v: \"garage\"}, {k: \"fixme\", v: \"\"}]\n        }, {\n\n            text: \"Nee, het zijn meerdere garages\",\n            tags: [{k: \"building\", v: \"garages\"}, {k: \"fixme\", v: \"\"}]\n        }\n\n\n        ];\n        q.addRequiredTag(\"fixme\", \"GRB thinks that this has number no number\")\n        return q;\n    }\n\n    static GrbHouseNumberQuestion() : QuestionDefinition{\n\n\n        const q = new QuestionDefinition(\"Wat is het huisnummer?\");\n        q.type = \"radio+text\";\n        q.severity = 10;\n\n        q.answers = [{\n            text: \"Het OSM-huisnummer is correct\",\n            tags: [{k: \"fixme\", v: \"\"}],\n        }]\n        q.key = \"addr:housenumber\";\n        \n      \n        q.addRequiredTag(\"fixme\", \"*\");\n        \n        return q;\n    }\n\n\n    private constructor(question: string) {\n        this.question = question;\n    }\n\n    /**\n     * Question for humans\n     */\n    public question: string;\n\n    /**\n     * 'type' indicates how the answers are rendered and must be one of:\n     * 'text' for a free to fill text field\n     * 'radio' for radiobuttons\n     * 'radio+text' for radiobuttons and a freefill text field\n     * 'dropdown' for a dropdown menu\n     * 'number' for a number field\n     *\n     * If 'text' or 'number' is specified, 'key' is used as tag for the answer.\n     * If 'radio' or 'dropdown' is specified, the answers are used from 'tags'\n     *\n     */\n    public type: string = 'radio';\n    /**\n     * Only used for 'text' or 'number' questions\n     */\n    public key: string = null;\n\n    public answers: {\n        text: string,\n        tags: { k: string, v: string }[]\n    }[];\n\n    /**\n     * Indicates that the element must have _all_ the tags defined below\n     * Dictionary 'key' => [values]; empty list is wildcard\n     */\n    private mustHaveAllTags = [];\n\n    /**\n     * Indicates that the element must _not_ have any of the tags defined below.\n     * Dictionary 'key' => [values]\n     */\n    private mustNotHaveTags = [];\n\n    /**\n     * Severity: how important the question is\n     * The higher, the sooner it'll be shown\n     */\n    public severity: number = 0;\n\n    addRequiredTag(key: string, value: string) {\n        if (this.mustHaveAllTags[key] === undefined) {\n            this.mustHaveAllTags[key] = [value];\n        } else {\n            if(this.mustHaveAllTags[key] === []){\n                // Wildcard\n                return;\n            }\n            this.mustHaveAllTags[key].push(value);\n        }\n\n        if (value === '*') {\n            this.mustHaveAllTags[key] = [];\n        }\n        return this;\n    }\n\n    addUnrequiredTag(key: string, value: string) {\n        let valueList = this.mustNotHaveTags[key];\n\n        if (valueList === undefined) {\n            valueList = [value];\n            this.mustNotHaveTags[key] = valueList;\n        } else {\n            if (valueList === []) {\n                return;\n            }\n            valueList.push(value);\n        }\n\n        if (value === '*') {\n            this.mustNotHaveTags[key] = [];\n        }\n        return this;\n    }\n\n    private addAnwser(anwser: string, key: string, value: string) {\n        if (this.answers === undefined) {\n            this.answers = [{text: anwser, tags: [{k: key, v: value}]}];\n        } else {\n            this.answers.push({text: anwser, tags: [{k: key, v: value}]});\n        }\n        this.addUnrequiredTag(key, value);\n    }\n\n    public isApplicable(alreadyExistingTags): boolean {\n        for (let k in this.mustHaveAllTags) {\n\n            var actual = alreadyExistingTags[k];\n            if (actual === undefined) {\n                return false;\n            }\n\n            let possibleVals = this.mustHaveAllTags[k];\n            if (possibleVals.length == 0) {\n                // Wildcard\n                continue;\n            }\n\n            let index = possibleVals.indexOf(actual);\n            if (index < 0) {\n                return false\n            }\n        }\n\n        for (var k in this.mustNotHaveTags) {\n            var actual = alreadyExistingTags[k];\n            if (actual === undefined) {\n                continue;\n            }\n            let impossibleVals = this.mustNotHaveTags[k];\n            if (impossibleVals.length == 0) {\n                // Wildcard\n                return false;\n            }\n\n            let index = impossibleVals.indexOf(actual);\n            if (index >= 0) {\n                return false\n            }\n        }\n\n        return true;\n\n    }\n}\n\n\nexport class Question {\n\n\n    // All the questions are stored in here, to be able to retrieve them globaly. This is a workaround, see below\n    static questions = Question.InitCallbackFunction();\n\n    static InitCallbackFunction(): Question[] {\n\n        // This needs some explanation, as it is a workaround\n        Question.questions = [];\n        // The html in a popup is only created when the user actually clicks to open it\n        // This means that we can not bind code to an HTML-element (as it doesn't exist yet)\n        // We work around this, by letting the 'save' button just call the function 'questionAnswered' with the ID of the question\n        // THis defines and registers this global function\n\n\n        /**\n         * Calls back to the question with either the answer or 'skip'\n         * @param questionId\n         * @param elementId\n         */\n        function questionAnswered(questionId, elementId, dontKnow) {\n            if (dontKnow) {\n                Question.questions[questionId].Skip(elementId);\n            } else {\n                Question.questions[questionId].OnSave(elementId);\n            }\n        }\n\n\n        function checkRadioButton(id) {\n            // @ts-ignore\n            document.getElementById(id).checked = true;\n        }\n\n        // must cast as any to set property on window\n        // @ts-ignore\n        const _global = (window /* browser */ || global /* node */) as any;\n        _global.questionAnswered = questionAnswered;\n        _global.checkRadioButton = checkRadioButton;\n        return [];\n    }\n\n\n    public readonly question: QuestionDefinition;\n    private _changeHandler: Changes;\n    private readonly _qId;\n    public skippedElements: string[] = [];\n\n    constructor(\n        changeHandler: Changes,\n        question: QuestionDefinition) {\n\n        this.question = question;\n\n        this._qId = Question.questions.length;\n        this._changeHandler = changeHandler;\n        Question.questions.push(this);\n    }\n\n    /**\n     * SHould this question be asked?\n     * Returns false if question is already there or if a premise is missing\n     */\n    public Applicable(tags): boolean {\n\n        if (this.skippedElements.indexOf(tags.id) >= 0) {\n            return false;\n        }\n        \n        return this.question.isApplicable(tags);\n    }\n\n    /**\n     *\n     * @param elementId: the OSM-id of the element to perform the change on, format 'way/123', 'node/456' or 'relation/789'\n     * @constructor\n     */\n    protected OnSave(elementId: string) {\n        let tagsToApply: { k: string, v: string }[] = [];\n        const q: QuestionDefinition = this.question;\n        let tp = this.question.type;\n        if (tp === \"radio\") {\n            const selected = document.querySelector('input[name=\"q' + this._qId + '\"]:checked');\n            if (selected === null) {\n                console.log(\"No answer selected\");\n                return\n            }\n            let index = (selected as any).value;\n            tagsToApply = q.answers[index].tags;\n        } else if (tp === \"text\") {\n            // @ts-ignore\n            let value = document.getElementById(\"q-\" + this._qId + \"-textbox\").value;\n            if (value === undefined || value.length == 0) {\n                console.log(\"Answer too short\");\n                return;\n            }\n            tagsToApply = [{k: q.key, v: value}];\n        } else if (tp === \"radio+text\") {\n            const selected = document.querySelector('input[name=\"q' + this._qId + '\"]:checked');\n            if (selected === null) {\n                console.log(\"No answer selected\");\n                return\n            }\n            let index = (selected as any).value;\n            if (index < q.answers.length) {\n                // A 'proper' answer was selected\n                tagsToApply = q.answers[index].tags;\n            } else {\n                // The textfield was selected \n                // @ts-ignore\n                let value = document.getElementById(\"q-\" + this._qId + \"-textbox\").value;\n                if (value === undefined || value.length < 3) {\n                    console.log(\"Answer too short\");\n                    return;\n                }\n                tagsToApply = [{k: q.key, v: value}];\n            }\n\n        }\n\n        console.log(\"Question.ts: Applying tags\",tagsToApply,\" to element \", elementId);\n\n        for (const toApply of tagsToApply) {\n            this._changeHandler.addChange(elementId, toApply.k, toApply.v);\n        }\n        \n    }\n\n    /**\n     * Creates the HTML question for this tag collection\n     */\n    public CreateHtml(tags: UIEventSource<any>): UIElement {\n        return new QuestionUI(this, this._qId, tags);\n    }\n\n\n    private Skip(elementId: any) {\n        this.skippedElements.push(elementId);\n        console.log(\"SKIP\");\n        // Yeah, this is cheating below\n        // It is an easy way to notify the UIElement that something has changed\n        this._changeHandler._allElements.getElement(elementId).ping();\n    }\n}"]}