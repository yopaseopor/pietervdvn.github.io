{"version":3,"sources":["UI/UIEventSource.ts","Logic/ElementStorage.ts"],"names":[],"mappings":"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","file":"ElementStorage.js","sourceRoot":"..","sourcesContent":["export class UIEventSource<T>{\n    \n    public data : T;\n    private _callbacks = [];\n\n    constructor(data: T) {\n        this.data = data;\n    }\n\n\n    public addCallback(callback: ((latestData : T) => void)) {\n        this._callbacks.push(callback);\n        return this;\n    }\n\n    public setData(t: T): void {\n        if (this.data === t) {\n            return;\n        }\n        this.data = t;\n        this.ping();\n    }\n\n    public ping(): void {\n        for (const callback of this._callbacks) {\n            callback(this.data);\n        }\n    }\n\n    public map<J>(f: ((T) => J),\n                  extraSources : UIEventSource<any>[] = []): UIEventSource<J> {\n        const self = this;\n        \n        const update = function () {\n            newSource.setData(f(self.data));\n            newSource.ping();\n        }\n        \n        this.addCallback(update);\n        for (const extraSource of extraSources) {\n            extraSource.addCallback(update);\n        }\n        const newSource = new UIEventSource<J>(\n            f(this.data)\n        );\n        \n\n        return newSource;\n\n    }\n\n\n}","/**\n * Keeps track of a dictionary 'elementID' -> element\n */\nimport {UIEventSource} from \"../UI/UIEventSource\";\n\nexport class ElementStorage {\n\n    private _elements = [];\n\n    constructor() {\n\n    }\n\n    addElementById(id: string, eventSource: UIEventSource<any>) {\n        this._elements[id] = eventSource;\n    }\n\n    addElement(element): UIEventSource<any> {\n        const eventSource = new UIEventSource<any>(element.properties);\n        this._elements[element.properties.id] = eventSource;\n        return eventSource;\n    }\n\n    addOrGetElement(element: any) {\n        const elementId = element.properties.id;\n        if (elementId in this._elements) {\n            const es = this._elements[elementId];\n            const keptKeys = es.data;\n            // The element already exists\n            // We add all the new keys to the old keys\n            for (const k in element.properties) {\n                const v = element.properties[k];\n                if (keptKeys[k] !== v) {\n                    keptKeys[k] = v;\n                    es.ping();\n                }\n            }\n\n            return es;\n        }else{\n            return this.addElement(element);\n        }\n    }\n\n    getElement(elementId): UIEventSource<any> {\n        if (elementId in this._elements) {\n            return this._elements[elementId];\n        }\n        console.log(\"Can not find eventsource with id \", elementId);\n    }\n\n\n    removeId(oldId: string) {\n        delete this._elements[oldId];\n    }\n}"]}