{"version":3,"sources":["Logic/TagsFilter.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,KAAA;AAAA;AAAA,YAAA;AAII,WAAA,KAAA,CAAY,CAAZ,EAAuB,CAAvB,EAAgC;AAC5B,SAAK,EAAL,GAAU,CAAV;AACA,SAAK,EAAL,GAAU,CAAV;AACH;;AAED,EAAA,KAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACI,WAAO,CAAC,OAAO,KAAK,EAAZ,GAAiB,KAAjB,GAAyB,KAAK,EAA9B,GAAmC,IAApC,CAAP;AACH,GAFD;;AAIA,EAAA,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAwC;AACpC,SAAkB,IAAA,EAAA,GAAA,CAAA,EAAA,MAAA,GAAA,IAAlB,EAAkB,EAAA,GAAA,MAAA,CAAA,MAAlB,EAAkB,EAAA,EAAlB,EAAwB;AAAnB,UAAM,GAAG,GAAA,MAAA,CAAA,EAAA,CAAT;;AACD,UAAI,GAAG,CAAC,CAAJ,KAAU,KAAK,EAAnB,EAAuB;AACnB,YAAI,GAAG,CAAC,CAAJ,KAAU,EAAd,EAAkB;AACd;AACA,iBAAO,KAAP;AACH;;AACD,YAAI,KAAK,EAAL,KAAY,GAAhB,EAAqB;AACjB;AACA,iBAAO,IAAP;AACH;;AAED,eAAO,GAAG,CAAC,CAAJ,CAAM,KAAN,CAAY,KAAK,EAAjB,EAAqB,MAArB,GAA8B,CAArC;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GAhBD;;AAkBJ,SAAA,KAAA;AA/BA,CAAA,EAAA;;AAAa,OAAA,CAAA,KAAA,GAAA,KAAA;;AAiCb,IAAA,GAAA;AAAA;AAAA,YAAA;AAII,WAAA,GAAA,CAAY,GAAZ,EAAyB,KAAzB,EAAsC;AAClC,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AAED,EAAA,GAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAwC;AACpC,SAAkB,IAAA,EAAA,GAAA,CAAA,EAAA,MAAA,GAAA,IAAlB,EAAkB,EAAA,GAAA,MAAA,CAAA,MAAlB,EAAkB,EAAA,EAAlB,EAAwB;AAAnB,UAAM,GAAG,GAAA,MAAA,CAAA,EAAA,CAAT;;AAED,UAAI,GAAG,CAAC,CAAJ,KAAU,KAAK,GAAnB,EAAwB;AACpB,YAAI,GAAG,CAAC,CAAJ,KAAU,EAAd,EAAkB;AACd;AACA,iBAAO,KAAP;AACH;;AACD,YAAI,KAAK,KAAL,KAAe,GAAnB,EAAwB;AACpB;AACA,iBAAO,IAAP;AACH;;AAED,eAAO,KAAK,KAAL,KAAe,GAAG,CAAC,CAA1B;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GAjBD;;AAmBA,EAAA,GAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACI,QAAI,KAAK,KAAL,KAAe,GAAnB,EAAwB;AACpB,aAAO,CAAC,OAAO,KAAK,GAAZ,GAAkB,IAAnB,CAAP;AACH;;AACD,QAAI,KAAK,KAAL,KAAe,EAAnB,EAAuB;AACnB;AACA,aAAO,CAAC,QAAQ,KAAK,GAAb,GAAmB,IAApB,CAAP;AACH;;AACD,WAAO,CAAC,OAAO,KAAK,GAAZ,GAAkB,KAAlB,GAA0B,KAAK,KAA/B,GAAuC,IAAxC,CAAP;AACH,GATD;;AAWJ,SAAA,GAAA;AAvCA,CAAA,EAAA;;AAAa,OAAA,CAAA,GAAA,GAAA,GAAA;;AAyCb,IAAA,EAAA;AAAA;AAAA,YAAA;AAII,WAAA,EAAA,CAAY,EAAZ,EAA4B;AACxB,SAAK,EAAL,GAAU,EAAV;AACH;;AAGD,EAAA,EAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAwC;AAEpC,SAAyB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,EAA9B,EAAyB,EAAA,GAAA,EAAA,CAAA,MAAzB,EAAyB,EAAA,EAAzB,EAAkC;AAA7B,UAAM,UAAU,GAAA,EAAA,CAAA,EAAA,CAAhB;;AACD,UAAI,UAAU,CAAC,OAAX,CAAmB,IAAnB,CAAJ,EAA8B;AAC1B,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH,GATD;;AAWA,EAAA,EAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AAEI,QAAM,OAAO,GAAG,EAAhB;;AACA,SAAyB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,EAA9B,EAAyB,EAAA,GAAA,EAAA,CAAA,MAAzB,EAAyB,EAAA,EAAzB,EAAkC;AAA7B,UAAM,UAAU,GAAA,EAAA,CAAA,EAAA,CAAhB;AACD,UAAM,UAAU,GAAG,UAAU,CAAC,UAAX,EAAnB;;AACA,WAAuB,IAAA,EAAA,GAAA,CAAA,EAAA,YAAA,GAAA,UAAvB,EAAuB,EAAA,GAAA,YAAA,CAAA,MAAvB,EAAuB,EAAA,EAAvB,EAAkC;AAA9B,YAAM,SAAS,GAAA,YAAA,CAAA,EAAA,CAAf;AACA,QAAA,OAAO,CAAC,IAAR,CAAa,SAAb;AACH;AACJ;;AACD,WAAO,OAAP;AACH,GAVD;;AAYJ,SAAA,EAAA;AAhCA,CAAA,EAAA;;AAAa,OAAA,CAAA,EAAA,GAAA,EAAA;;AAkCb,IAAA,GAAA;AAAA;AAAA,YAAA;AAII,WAAA,GAAA,CAAY,GAAZ,EAA6B;AACzB,SAAK,GAAL,GAAW,GAAX;AACH;;AAED,EAAA,GAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAwC;AAEpC,SAAyB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,GAA9B,EAAyB,EAAA,GAAA,EAAA,CAAA,MAAzB,EAAyB,EAAA,EAAzB,EAAmC;AAA9B,UAAM,UAAU,GAAA,EAAA,CAAA,EAAA,CAAhB;;AACD,UAAI,CAAC,UAAU,CAAC,OAAX,CAAmB,IAAnB,CAAL,EAA+B;AAC3B,eAAO,KAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH,GATD;;AAWQ,EAAA,GAAA,CAAA,SAAA,CAAA,OAAA,GAAR,UAAgB,MAAhB,EAAgC,OAAhC,EAAiD;AAC7C,QAAI,MAAM,GAAG,EAAb;;AACA,SAAiB,IAAA,EAAA,GAAA,CAAA,EAAA,SAAA,GAAA,OAAjB,EAAiB,EAAA,GAAA,SAAA,CAAA,MAAjB,EAAiB,EAAA,EAAjB,EAA0B;AAArB,UAAM,EAAE,GAAA,SAAA,CAAA,EAAA,CAAR;AACD,MAAA,MAAM,CAAC,IAAP,CAAY,MAAM,GAAG,EAArB;AACH;;AACD,WAAO,MAAP;AACH,GANO;;AAQR,EAAA,GAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AAEI,QAAI,UAAU,GAAG,IAAjB;;AAEA,SAAyB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,GAA9B,EAAyB,EAAA,GAAA,EAAA,CAAA,MAAzB,EAAyB,EAAA,EAAzB,EAAmC;AAA9B,UAAM,UAAU,GAAA,EAAA,CAAA,EAAA,CAAhB;AACD,UAAI,gBAAgB,GAAG,UAAU,CAAC,UAAX,EAAvB;;AACA,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACrB,QAAA,UAAU,GAAG,gBAAb;AACA;AACH;;AAED,UAAI,UAAU,GAAG,EAAjB;;AACA,WAAmB,IAAA,EAAA,GAAA,CAAA,EAAA,YAAA,GAAA,UAAnB,EAAmB,EAAA,GAAA,YAAA,CAAA,MAAnB,EAAmB,EAAA,EAAnB,EAA+B;AAA1B,YAAI,MAAM,GAAA,YAAA,CAAA,EAAA,CAAV;AACD,QAAA,UAAU,CAAC,IAAX,CACI,KAAK,OAAL,CAAa,MAAb,EAAqB,gBAArB,CADJ;AAGH;;AACD,MAAA,UAAU,GAAG,UAAb;AACH;;AACD,WAAO,UAAP;AACH,GApBD;;AAqBJ,SAAA,GAAA;AAhDA,CAAA,EAAA;;AAAa,OAAA,CAAA,GAAA,GAAA,GAAA;;AAwDb,IAAA,QAAA;AAAA;AAAA,YAAA;AAAA,WAAA,QAAA,GAAA,CAUC;;AARU,EAAA,QAAA,CAAA,aAAA,GAAP,UAAqB,UAArB,EAAoC;AAChC,QAAM,MAAM,GAAG,EAAf;;AACA,SAAK,IAAM,CAAX,IAAgB,UAAhB,EAA4B;AACxB,MAAA,MAAM,CAAC,IAAP,CAAY;AAAC,QAAA,CAAC,EAAE,CAAJ;AAAO,QAAA,CAAC,EAAE,UAAU,CAAC,CAAD;AAApB,OAAZ;AACH;;AACD,WAAO,MAAP;AACH,GANM;;AAQX,SAAA,QAAA;AAVA,CAAA,EAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA","file":"TagsFilter.js","sourceRoot":"..","sourcesContent":["export class Regex implements TagsFilter {\n    private _k: string;\n    private _r: string;\n\n    constructor(k: string, r: string) {\n        this._k = k;\n        this._r = r;\n    }\n\n    asOverpass(): string[] {\n        return [\"['\" + this._k + \"'~'\" + this._r + \"']\"];\n    }\n\n    matches(tags: { k: string; v: string }[]): boolean {\n        for (const tag of tags) {\n            if (tag.k === this._k) {\n                if (tag.v === \"\") {\n                    // This tag has been removed\n                    return false;\n                }\n                if (this._r === \"*\") {\n                    // Any is allowed\n                    return true;\n                }\n\n                return tag.v.match(this._r).length > 0;\n            }\n        }\n        return false;\n    }\n\n}\n\nexport class Tag implements TagsFilter {\n    public key: string;\n    public value: string;\n\n    constructor(key: string, value: string) {\n        this.key = key;\n        this.value = value;\n    }\n\n    matches(tags: { k: string; v: string }[]): boolean {\n        for (const tag of tags) {\n\n            if (tag.k === this.key) {\n                if (tag.v === \"\") {\n                    // This tag has been removed\n                    return false;\n                }\n                if (this.value === \"*\") {\n                    // Any is allowed\n                    return true;\n                }\n\n                return this.value === tag.v;\n            }\n        }\n        return false;\n    }\n\n    asOverpass(): string[] {\n        if (this.value === \"*\") {\n            return ['[\"' + this.key + '\"]'];\n        }\n        if (this.value === \"\") {\n            // NOT having this key\n            return ['[!\"' + this.key + '\"]'];\n        }\n        return ['[\"' + this.key + '\"=\"' + this.value + '\"]'];\n    }\n\n}\n\nexport class Or implements TagsFilter {\n\n    public or: TagsFilter[]\n\n    constructor(or: TagsFilter[]) {\n        this.or = or;\n    }\n\n\n    matches(tags: { k: string; v: string }[]): boolean {\n\n        for (const tagsFilter of this.or) {\n            if (tagsFilter.matches(tags)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    asOverpass(): string[] {\n\n        const choices = [];\n        for (const tagsFilter of this.or) {\n            const subChoices = tagsFilter.asOverpass();\n            for(const subChoice of subChoices){\n                choices.push(subChoice)\n            }\n        }\n        return choices;\n    }\n\n}\n\nexport class And implements TagsFilter {\n\n    public and: TagsFilter[]\n\n    constructor(and: TagsFilter[]) {\n        this.and = and;\n    }\n\n    matches(tags: { k: string; v: string }[]): boolean {\n\n        for (const tagsFilter of this.and) {\n            if (!tagsFilter.matches(tags)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private combine(filter: string, choices: string[]): string[] {\n        var values = []\n        for (const or of choices) {\n            values.push(filter + or);\n        }\n        return values;\n    }\n\n    asOverpass(): string[] {\n\n        var allChoices = null;\n\n        for (const andElement of this.and) {\n            var andElementFilter = andElement.asOverpass();\n            if (allChoices === null) {\n                allChoices = andElementFilter;\n                continue;\n            }\n\n            var newChoices = []\n            for (var choice of allChoices) {\n                newChoices.push(\n                    this.combine(choice, andElementFilter)\n                )\n            }\n            allChoices = newChoices;\n        }\n        return allChoices;\n    }\n}\n\nexport interface TagsFilter {\n    matches(tags: { k: string, v: string }[]): boolean\n\n    asOverpass(): string[]\n}\n\nexport class TagUtils {\n\n    static proprtiesToKV(properties: any): { k: string, v: string }[] {\n        const result = [];\n        for (const k in properties) {\n            result.push({k: k, v: properties[k]})\n        }\n        return result;\n    }\n\n}"]}