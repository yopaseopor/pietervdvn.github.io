{"version":3,"sources":["UI/UIEventSource.ts","UI/UIElement.ts","UI/Input/InputElement.ts","Logic/LocalStorageSource.ts","UI/i18n/Locale.ts","UI/Base/Combine.ts","UI/i18n/Translation.ts","UI/Base/FixedUiElement.ts","UI/i18n/Translations.ts","UI/Input/DropDown.ts","test.ts"],"names":[],"mappings":";AAAa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAb,IAAA,EAAA,WAKI,SAAA,EAAY,GAFJ,KAAA,WAAa,GAGZ,KAAA,KAAO,EA2EpB,OAvEW,EAAA,UAAA,YAAP,SAAmB,GAER,OADF,KAAA,WAAW,KAAK,GACd,MAGJ,EAAA,UAAA,QAAP,SAAe,GACP,KAAK,OAAS,IAGb,KAAA,KAAO,EACP,KAAA,SAGF,EAAA,UAAA,KAAP,WAC2B,IAAA,IAAA,EAAA,EAAA,EAAA,KAAK,WAAL,EAAA,EAAA,OAAA,IAAiB,EACpC,EADe,EAAA,IACN,KAAK,QAIR,EAAA,QAAd,SAAyB,EAAyC,GA7BzD,IAAA,EA8BC,EAAO,IAAI,EAA4B,QAAf,EAAI,EAAO,YAAI,IAAA,OAAA,EAAA,EAAE,MAE/C,EAAO,YAAY,SAAC,GACjB,EAAK,QAAQ,MAAA,OAAU,EAAV,EAAY,QAGC,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAiB,CAArB,EAAA,GACN,YAAY,WArC1B,IAAA,EAsCG,EAAK,QAAmB,QAAZ,EAAC,EAAO,YAAI,IAAA,OAAA,EAAA,EAAE,QAK3B,OAAA,GAGJ,EAAA,UAAA,IAAP,SAAc,EACA,QAAA,IAAA,IAAA,EAAA,IACJ,IAAA,EAAO,KAEP,EAAS,WACX,EAAU,QAAQ,EAAE,EAAK,OACzB,EAAU,QAGT,KAAA,YAAY,GACS,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAc,CAAlB,EAAA,GACN,YAAY,GAEtB,IAAA,EAAY,IAAI,EAClB,EAAE,KAAK,OAIJ,OAAA,GAKJ,EAAA,UAAA,SAAP,SAAgB,GACP,KAAA,YAAY,SAAC,GAAW,OAAA,EAAY,QAAQ,KAC3C,IAAA,EAAO,KAON,OANP,EAAY,YAAY,SAAC,GAAW,OAAA,EAAK,QAAQ,UAChC,IAAd,KAAK,KACA,KAAA,QAAQ,EAAY,MAExB,EAAY,QAAQ,KAAK,MAEtB,MAGf,EAjFA,GAAa,QAAA,cAAA;;ACES,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAtB,IAAA,EAAA,WAYI,SAAA,EAAsB,GALd,KAAA,cAAe,EAMd,KAAA,GAAK,cAAgB,EAAU,OAC/B,KAAA,QAAU,EACf,EAAU,SACL,KAAA,SAAS,GAqHtB,OAjHW,EAAA,UAAA,SAAP,SAAgB,GACR,QAAW,IAAX,EACO,OAAA,KAEL,IAAA,EAAO,KAIN,OAHP,EAAO,YAAY,WACf,EAAK,WAEF,MAKJ,EAAA,UAAA,QAAP,SAAe,GAGJ,OAFF,KAAA,SAAW,EACX,KAAA,SACE,MAGX,EAAA,UAAA,OAAA,WACO,IAAA,EAAU,mBAAV,CAIC,IAAA,EAAU,SAAS,eAAe,KAAK,IACvC,GAAA,MAAA,EAAA,CAaA,GATJ,EAAQ,UAAY,KAAK,cACrB,KAAK,eACqB,KAAtB,EAAQ,UACR,EAAQ,cAAc,MAAM,QAAU,OAEtC,EAAQ,cAAc,MAAM,aAAU,QAIxB,IAAlB,KAAK,SAAwB,CACvB,IAAA,EAAO,KACb,EAAQ,QAAU,SAAC,GAEZ,EAAE,WAGL,EAAK,WAEL,EAAE,UAAW,IAEjB,EAAQ,MAAM,cAAgB,MAC9B,EAAQ,MAAM,OAAS,UAKtB,IAAA,IAAM,KAFN,KAAA,YAAY,GAED,KAAM,CACZ,IAAA,EAAQ,KAAK,GACf,GAAA,aAAiB,EACjB,EAAM,cACH,GAAI,aAAiB,MACP,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAO,CAAb,IAAA,EAAE,EAAA,GACL,aAAc,GACd,EAAG,cAOvB,EAAA,UAAA,YAAA,SAAY,GAGD,OAFF,KAAA,aAAe,EACf,KAAA,SACE,MAIF,EAAA,UAAA,YAAV,SAAsB,KAGrB,EAAA,UAAA,OAAA,WACW,MAAA,+BAAiC,KAAK,GAAK,KAAO,KAAK,cAAgB,WAGlF,EAAA,UAAA,SAAA,SAAS,GACD,IAAA,EAAU,SAAS,eAAe,GAClC,GAAY,OAAZ,EACM,KAAA,yCAA2C,EAI9C,OAFP,EAAQ,UAAY,KAAK,SACpB,KAAA,SACE,MAKJ,EAAA,UAAA,SAAP,WACS,IAAA,IAAM,KAAK,KAAM,CACZ,IAAA,EAAQ,KAAK,GACf,GAAA,aAAiB,EACjB,EAAM,gBACH,GAAI,aAAiB,MACP,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAO,CAAb,IAAA,EAAE,EAAA,GACL,aAAc,GACd,EAAG,cAOhB,EAAA,UAAA,QAAP,WACW,MAAuB,KAAvB,KAAK,eAjID,EAAA,OAAiB,EAQlB,EAAA,oBAAqB,EA2HvC,EArIA,GAAsB,QAAA,UAAA;;ACEA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAJtB,IAAA,EAAA,QAAA,gBAIA,EAAA,SAAA,GAAA,SAAA,IAAsB,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAMtB,OAN8C,EAAA,EAAA,GAM9C,EANA,CAA8C,EAAA,WAAxB,QAAA,aAAA;;ACFT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,wBAAA,EAFb,IAAA,EAAA,QAAA,uBAEA,EAAA,WAAA,SAAA,KAkBA,OAhBW,EAAA,IAAP,SAAW,EAAa,GAIT,YAJS,IAAA,IAAA,OAAA,GAIT,IAAI,EAAA,cAAsB,IAY7C,EAlBA,GAAa,QAAA,mBAAA;;ACKQ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IANrB,IAAA,EAAA,QAAA,kCACA,EAAA,QAAA,qBAKA,EAAA,WAAA,SAAA,KAUA,OAPkB,EAAA,qBAAd,SAAmC,EAAqB,GAE7C,YAF6C,IAAA,IAAA,EAAA,IAE7C,IAAI,EAAA,SAAS,EAAO,EAAY,mBAAmB,IAAI,SAAA,GAC/C,MAAA,CAAC,MAAO,EAAM,MAAO,KAEjC,EAAO,WAPA,EAAA,SAAkC,EAAA,mBAAmB,IAAI,WAAY,MASvF,EAVA,GAAqB,QAAA,QAAA;;ACJrB,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAHA,IAAA,EAAA,QAAA,gBAGA,EAAA,SAAA,GAII,SAAA,EAAY,GAAZ,IAAA,EACI,EAAA,KAAA,UAAM,IAAU,KALxB,OAEY,EAAA,UAAe,EAInB,EAAK,WAAa,EAN1B,EA4BA,OA5BqC,EAAA,EAAA,GASjC,EAAA,UAAA,YAAA,WAE0B,IADlB,IAAA,EAAW,GACO,EAAA,EAAA,EAAA,KAAK,WAAL,EAAA,EAAA,OAAA,IAAiB,CAA5B,IAAA,EAAO,EAAA,GACV,aAAmB,EAAA,UACnB,GAAY,EAAQ,SAEpB,GAAY,EAGb,OAAA,GAGX,EAAA,UAAA,YAAA,SAAY,GACc,IAAA,IAAA,EAAA,EAAA,EAAA,KAAK,WAAL,EAAA,EAAA,OAAA,IAAiB,CAA5B,IAAA,EAAO,EAAA,GACV,aAAmB,EAAA,WACnB,EAAQ,WAIxB,EA5BA,CAAqC,EAAA,WAArC,QAAA,QAAA;;ACIqB,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAPrB,IAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,aAGA,EAAA,EAAA,QAAA,oBAGA,EAAA,SAAA,GAwDI,SAAA,EAAY,GAAZ,IAAA,EACI,EAAA,KAAA,KAAM,EAAA,QAAO,WAAS,KAzDT,OA0Db,EAAK,aAAe,EA1DP,EAuErB,OAvEyC,EAAA,EAAA,GAI9B,EAAA,UAAA,KAAP,SAAY,GACF,IAAA,EAAkB,GACnB,IAAA,IAAM,KAAQ,KAAK,aAAc,CAC9B,IAAA,EAAmB,KAAK,aAAa,GACpC,IAAA,IAAM,KAAK,EAAM,CACZ,IAAA,EAAW,GACX,EAAQ,EAAS,MAAM,IAAM,EAAI,KACjC,EAAyB,EAAK,GAChC,EAAgB,GACA,iBAAR,EACR,EAAQ,GAER,EAAY,eAAiB,EAC7B,EAAQ,EAAG,eAEV,IAAA,IAAI,EAAI,EAAG,EAAI,EAAM,OAAS,EAAG,IAClC,EAAS,KAAK,EAAM,IACpB,EAAS,KAAK,GAElB,EAAS,KAAK,EAAM,EAAM,OAAS,IACnC,EAAW,IAAI,EAAA,QAAQ,GAAU,cAErC,EAAgB,GAAQ,EAGrB,OADP,EAAY,oBAAiB,EACtB,IAAI,EAAY,IAK3B,OAAA,eAAI,EAAA,UAAA,MAAG,CAAP,IAAA,WAlCiB,IAAA,EAmCP,EAAM,KAAK,aAAuC,QAA3B,EAAC,EAAY,sBAAc,IAAA,EAAA,EAAI,EAAA,QAAO,SAAS,MACxE,QAAQ,IAAR,EACO,OAAA,EAEL,IAAA,EAAK,KAAK,aAAL,GAEP,GADJ,QAAQ,KAAK,+BAAgC,EAAA,QAAO,SAAS,KAAM,MAAO,QAC/D,IAAP,EACO,OAAA,EAEN,IAAA,IAAM,KAAK,KAAK,aACV,OAAA,KAAK,aAAa,GAEtB,MAAA,uBAbJ,YAAA,EAlCU,cAAA,IAkDjB,EAAA,UAAA,YAAA,WACW,OAAA,KAAK,KAWT,EAAA,UAAA,EAAP,WACW,OAAA,IAAI,EAAY,KAAK,cAAc,UAGvC,EAAA,UAAA,MAAP,WACW,OAAA,IAAI,EAAY,KAAK,eAjEjB,EAAA,oBAAiB,EAqEpC,EAvEA,CAAyC,EAAA,WAApB,QAAA,QAAA;;ACLR,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EAFb,IAAA,EAAA,QAAA,gBAEA,EAAA,SAAA,GAGI,SAAA,EAAY,GAAZ,IAAA,EACI,EAAA,KAAA,UAAM,IAAU,KAJX,OAKL,EAAK,MAAQ,MAAA,EAAA,EAAQ,GALhB,EAab,OAboC,EAAA,EAAA,GAQhC,EAAA,UAAA,YAAA,WACW,OAAA,KAAK,OAIpB,EAbA,CAAoC,EAAA,WAAvB,QAAA,eAAA;;ACIQ,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IANrB,IAAA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,kBACA,EAAA,QAAA,gBACA,EAAA,QAAA,0BAGA,EAAA,WAEI,SAAA,IACU,KAAA,8FAgfd,OAtCkB,EAAA,EAAd,SAAgB,GACR,OAAA,aAAa,EAAA,UACN,EAEJ,IAAI,EAAA,eAAe,IAGhB,EAAA,kBAAd,WAGW,IAFD,IAAA,EAAa,CAAC,EAAa,GAC3B,EAAoB,GACnB,EAAM,OAAS,GAAG,CACf,IAAA,EAAO,EAAM,MACf,GAAA,aAAgB,EAAA,cAAqC,IAAtB,EAAK,aACpC,EAAG,KAAK,QAEH,IAAA,IAAM,KAAK,EAAM,CACZ,IAAA,EAAI,EAAK,GACf,EAAM,KAAK,IAMG,IADpB,IAAA,EAAiB,GACG,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAI,CAAnB,IAAA,EAAW,EAAA,GACb,IAAA,IAAM,KAAY,EAAY,kBACE,IAA7B,EAAe,GACf,EAAe,GAAY,EAE3B,EAAe,KAItB,IAAA,IAAM,KAAY,EACnB,QAAQ,IAAI,yBAA0B,EAAU,EAAe,GAAW,IAAK,EAAG,SAvenF,EAAA,EAAI,CACP,SAAU,CACN,MAAO,IAAI,EAAA,QAAE,CACT,GAAI,sCACJ,GAAI,0CACJ,GAAI,6BAER,YAAa,IAAI,EAAA,QAAE,CACf,GAAI,6NAEJ,GAAI,8OAEJ,GAAI,oOAGR,oBAAqB,IAAI,EAAA,QAAE,CAAC,GAAI,UAAW,GAAI,aAAc,GAAI,aACjE,QAAS,CACL,KAAM,IAAI,EAAA,QAAE,CAAC,GAAI,eAAgB,GAAI,eAAgB,GAAI,aACzD,MAAO,IAAI,EAAA,QAAE,CAAC,GAAI,eAAgB,GAAI,eAAgB,GAAI,aAC1D,KAAM,CACF,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,2DACJ,GAAI,4DACJ,GAAI,aAER,SAAU,IAAI,EAAA,QAAE,CAAC,GAAI,uBAAwB,GAAI,sBAAuB,GAAI,aAC5E,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,4CACJ,GAAI,wCACJ,GAAI,aAER,GAAI,IAAI,EAAA,QAAE,CAAC,GAAI,gBAAiB,GAAI,mBACpC,OAAQ,IAAI,EAAA,QAAE,CAAC,GAAI,eAAgB,GAAI,UAAW,GAAI,aACtD,WAAY,IAAI,EAAA,QAAE,CAAC,GAAI,mBAAoB,GAAI,iBAAkB,GAAI,aACrE,iBAAkB,IAAI,EAAA,QAAE,CAAC,GAAI,mBAAoB,GAAI,cAAe,GAAI,aACxE,KAAM,IAAI,EAAA,QAAE,CAAC,GAAI,OAAQ,GAAI,SAAU,GAAI,aAC3C,KAAM,IAAI,EAAA,QAAE,CAAC,GAAI,OAAQ,GAAI,MAAO,GAAI,aAC5B,WAAA,IAAI,EAAA,QAAE,CAAC,GAAI,aAAc,GAAI,6BAA8B,GAAI,cAG/E,SAAU,CACN,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,8CACJ,GAAI,oDACJ,GAAI,aAER,SAAU,IAAI,EAAA,QAAE,CAAC,GAAI,4BAA6B,GAAI,4BAA6B,GAAI,aACvF,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,sEACJ,GAAI,wEACJ,GAAI,aAER,QAAS,IAAI,EAAA,QAAE,CACX,GAAI,+BACJ,GAAI,sCACJ,GAAI,eAIhB,QAAS,CACL,KAAM,IAAI,EAAA,QAAE,CACR,GAAI,sCACJ,GAAI,0CACJ,GAAI,aAER,MAAO,IAAI,EAAA,QAAE,CAAC,GAAI,eAAgB,GAAI,eAAgB,GAAI,aAC1D,UAAW,CACP,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,wDACJ,GAAI,sCACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CAAC,GAAI,uBAAwB,GAAI,2BAA4B,GAAI,aAC5E,GAAI,IAAI,EAAA,QAAE,CAAC,GAAI,wBAAyB,GAAI,4BAA6B,GAAI,aAC7E,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,sCACJ,GAAI,wDACJ,GAAI,cAGZ,SAAU,CACN,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,iCACJ,GAAI,oCACJ,GAAI,aAER,OAAQ,IAAI,EAAA,QAAE,CAAC,GAAI,cAAe,GAAI,eAAgB,GAAI,aAC1D,SAAU,IAAI,EAAA,QAAE,CAAC,GAAI,kBAAmB,GAAI,mBAAoB,GAAI,cAExE,YAAa,CACT,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,sCACJ,GAAI,0BACJ,GAAI,aAER,YAAa,IAAI,EAAA,QAAE,CACf,GAAI,+BACJ,GAAI,yBACJ,GAAI,aAER,OAAQ,IAAI,EAAA,QAAE,CAAC,GAAI,0BAA2B,GAAI,wBAAyB,GAAI,cAEnF,OAAQ,CACJ,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,6BACJ,GAAI,yCACJ,GAAI,aAER,QAAS,IAAI,EAAA,QAAE,CACX,GAAI,0DACJ,GAAI,mFACJ,GAAI,aAER,OAAQ,IAAI,EAAA,QAAE,CAAC,GAAI,cAAe,GAAI,eAAgB,GAAI,aAC1D,WAAY,IAAI,EAAA,QAAE,CACd,GAAI,yCACJ,GAAI,2CACJ,GAAI,aAER,KAAM,IAAI,EAAA,QAAE,CAAC,GAAI,gBAAiB,GAAI,oBAAsB,GAAI,aAChE,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,oDACJ,GAAI,sDACJ,GAAI,aAER,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,2BACJ,GAAI,kCACJ,GAAI,cAGZ,MAAO,CACH,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,wEACJ,GAAI,oEACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CACP,GAAI,wBACJ,GAAI,yCACJ,GAAI,aAER,GAAI,IAAI,EAAA,QAAE,CACN,GAAI,yBACJ,GAAI,0CACJ,GAAI,cAGZ,SAAU,CACN,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,8CACJ,GAAI,iDACJ,GAAI,aAER,SAAU,IAAI,EAAA,QAAE,CAAC,GAAI,4BAA6B,GAAI,4BAA6B,GAAI,aACvF,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,sEACJ,GAAI,qEACJ,GAAI,aAER,QAAS,IAAI,EAAA,QAAE,CACX,GAAI,+BACJ,GAAI,sCACJ,GAAI,cAGZ,SAAU,CACN,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,qDACJ,GAAI,yCACJ,GAAI,aAER,KAAM,IAAI,EAAA,QAAE,CAER,GAAI,+BACJ,GAAI,gCACJ,GAAI,aAER,MAAO,IAAI,EAAA,QAAE,CACT,GAAI,0DACJ,GAAI,+DACJ,GAAI,aAER,KAAM,IAAI,EAAA,QAAE,CACR,GAAI,0CACJ,GAAI,gDACJ,GAAI,cAGZ,MAAO,CACH,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,yFACJ,GAAI,gFACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CAAC,GAAI,2BAA4B,GAAI,8BAA+B,GAAI,aACnF,GAAI,IAAI,EAAA,QAAE,CAAC,GAAI,4BAA6B,GAAI,+BAAgC,GAAI,eAG5F,KAAM,CACF,KAAM,IAAI,EAAA,QAAE,CAAC,GAAI,YAAa,GAAI,cAAe,GAAI,aAErD,MAAO,IAAI,EAAA,QAAE,CAAC,GAAI,YAAa,GAAI,YAAa,GAAI,aACpD,YAAa,IAAI,EAAA,QAAE,CAAC,GAAI,cAAe,GAAI,eAAgB,GAAI,aAC/D,UAAW,IAAI,EAAA,QAAE,CAAC,GAAI,mBAAoB,GAAI,cAAe,GAAI,aAEjE,WAAY,IAAI,EAAA,QAAE,CAAC,GAAI,mBAAoB,GAAI,mBAAoB,GAAI,aACvE,iBAAkB,IAAI,EAAA,QAAE,CAAC,GAAI,YAAa,GAAI,sBAAuB,GAAI,aACzE,eAAgB,IAAI,EAAA,QAAE,CAAC,GAAI,mBAAoB,GAAI,qBAAsB,GAAI,aAI7E,OAAQ,CACJ,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,6BACJ,GAAI,gCACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CAAC,GAAI,wBAAyB,GAAI,+BAAgC,GAAI,aACjF,GAAI,IAAI,EAAA,QAAE,CACN,GAAI,+BACJ,GAAI,oCACJ,GAAI,cAGZ,OAAQ,CACJ,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,+BACJ,GAAI,gCACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CAAC,GAAI,0BAA2B,GAAI,+BAAgC,GAAI,aACnF,GAAI,IAAI,EAAA,QAAE,CACN,GAAI,iCACJ,GAAI,oCACJ,GAAI,aAER,KAAM,IAAI,EAAA,QAAE,CAAC,GAAI,2CAA4C,GAAI,6DAA8D,GAAI,aACnI,MAAO,IAAI,EAAA,QAAE,CAAC,GAAI,kDAAmD,GAAI,0DAA2D,GAAI,cAE5I,OAAQ,CACJ,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,iCACJ,GAAI,gCACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CAAC,GAAI,4BAA6B,GAAI,+BAAgC,GAAI,aACrF,GAAI,IAAI,EAAA,QAAE,CACN,GAAI,mCACJ,GAAI,oCACJ,GAAI,cAGZ,KAAM,CACF,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,sDACJ,GAAI,qDACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CACP,GAAI,0CACJ,GAAI,uDACJ,GAAI,aAER,GAAI,IAAI,EAAA,QAAE,CACN,GAAI,iDACJ,GAAI,oDACJ,GAAI,cAGZ,MAAO,CACH,SAAU,IAAI,EAAA,QAAE,CAAC,GAAI,yCAA0C,GAAI,qCAAsC,GAAI,aAC7G,OAAQ,IAAI,EAAA,QAAE,CAAC,GAAI,qCAAsC,GAAI,oCAAqC,GAAI,aACtG,SAAU,IAAI,EAAA,QAAE,CAAC,GAAI,mCAAoC,GAAI,kCAAmC,GAAI,cAExG,WAAY,CACR,SAAU,IAAI,EAAA,QAAE,CAAC,GAAI,yCAA0C,GAAI,4CAA6C,GAAI,aACpH,IAAK,IAAI,EAAA,QAAE,CAAC,GAAI,oCAAqC,GAAI,2CAA4C,GAAI,aACzG,GAAI,IAAI,EAAA,QAAE,CAAC,GAAI,2CAA6C,GAAI,gDAAiD,GAAI,aACrH,KAAM,IAAI,EAAA,QAAE,CAAC,GAAI,yCAA0C,GAAI,iDAAkD,GAAI,cAEzH,IAAK,CACD,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,gDACJ,GAAI,oEACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CACP,GAAI,wCACJ,GAAI,mEACJ,GAAI,aAER,GAAI,IAAI,EAAA,QAAE,CACN,GAAI,+CACJ,GAAI,wEACJ,GAAI,eAIhB,eAAgB,CACZ,MAAO,IAAI,EAAA,QAAE,CACT,GAAI,iBACJ,GAAI,sBAIhB,UAAW,CACP,MAAO,IAAI,EAAA,QAAE,CAAC,GAAI,oBAAqB,GAAI,6BAC3C,YAAa,IAAI,EAAA,QAAE,CACX,GAAI,oGACJ,GAAI,2UAKZ,SAAU,IAAI,EAAA,QAAE,CACZ,GAAI,sBAIZ,MAAO,CACH,WAAY,IAAI,EAAA,QAAE,CAAC,GAAI,cAAe,GAAI,gBAAiB,GAAI,aAC/D,iBAAkB,IAAI,EAAA,QAAE,CACpB,GAAI,4BACJ,GAAI,oCACJ,GAAI,aAER,YAAa,IAAI,EAAA,QAAE,CACf,GAAI,sDACJ,GAAI,+EACJ,GAAI,aAER,gBAAiB,IAAI,EAAA,QAAE,CACnB,GAAI,mCACJ,GAAI,iCACJ,GAAI,aAER,IAAK,IAAI,EAAA,QAAE,CAAC,GAAI,uBAAwB,GAAI,wBAAyB,GAAI,aACzE,KAAM,IAAI,EAAA,QAAE,CAAC,GAAI,6BAA8B,GAAI,6BAA8B,GAAI,aACrF,IAAK,IAAI,EAAA,QAAE,CAAC,GAAI,0BAA2B,GAAI,0BAA2B,GAAI,cAElF,cAAe,CACX,YAAa,IAAI,EAAA,QAAE,CAAC,GAAI,kBAAmB,GAAI,wBAAyB,GAAI,aAC5E,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,mCACJ,GAAI,4CACJ,GAAI,aAER,MAAO,IAAI,EAAA,QAAE,CAAC,GAAI,QAAS,GAAI,SAAU,GAAI,cAEjD,QAAS,CACL,uBAAwB,IAAI,EAAA,QAAE,CAAC,GAAI,2BAA4B,GAAI,gCACnE,WAAY,IAAI,EAAA,QAAE,CACd,GAAI,uLACJ,GAAI,qNAER,YAAa,IAAI,EAAA,QAAE,CACf,GAAI,mCACJ,GAAI,qCAER,OAAQ,CACJ,OAAQ,IAAI,EAAA,QAAY,CACpB,GAAI,oBACJ,GAAI,0BAER,UAAW,IAAI,EAAA,QAAY,CACvB,GAAI,eACJ,GAAI,sBAER,QAAS,IAAI,EAAA,QAAY,CACrB,GAAI,mBACJ,GAAI,qBAER,MAAO,IAAI,EAAA,QAAY,CACnB,GAAI,0BACJ,GAAI,oBAIZ,eAAgB,IAAI,EAAA,QAAE,CAClB,GAAI,oBACJ,GAAI,kBAER,KAAM,IAAI,EAAA,QAAE,CACR,GAAI,OACJ,GAAI,YAER,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,SACJ,GAAI,cAER,KAAM,IAAI,EAAA,QAAE,CACR,GAAI,qBACJ,GAAI,oBAER,mBAAoB,IAAI,EAAA,QAAE,CACtB,GAAI,0BACJ,GAAI,6BAER,iBAAkB,IAAI,EAAA,QAAE,CACpB,GAAI,6BACJ,GAAI,oCAER,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,SACJ,GAAI,UAGR,eAAgB,IAAI,EAAA,QAAE,CACnB,GAAI,wEACH,GAAI,mFAGR,IAAK,CAED,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,4BACJ,GAAI,iCAER,OAAQ,IAAI,EAAA,QAAE,CACV,GAAI,yEACJ,GAAI,0EAER,YAAa,IAAI,EAAA,QAAE,CACf,GAAI,8EACJ,GAAI,iGAER,cAAe,IAAI,EAAA,QAAE,CACjB,GAAI,kCACJ,GAAI,0DAER,aAAc,IAAI,EAAA,QAAE,CAChB,GAAI,0EACJ,GAAI,kFAGZ,aAAc,IAAI,EAAA,QAAE,CAChB,GAAI,oBACJ,GAAI,iBAER,MAAO,IAAI,EAAA,QAAE,CACT,GAAI,wDACJ,GAAI,0DAGR,mBAAoB,IAAI,EAAA,QAAE,CACxB,GAAK,sCAEP,eAAgB,IAAI,EAAA,QAAE,CAClB,GAAI,6BA2CpB,EAnfA,GAAqB,QAAA,QAAA;;ACCR,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAPb,IAAA,EAAA,QAAA,oBAEA,EAAA,QAAA,kBAGA,EAAA,EAAA,QAAA,yBAEA,EAAA,SAAA,GAOI,SAAA,EAAY,EACA,EACA,QAAA,IAAA,IAAA,OAAA,GAFZ,IAAA,EAGI,EAAA,KAAA,UAAM,IAAU,KAChB,EAAK,OAAS,MAAA,EAAA,EAAS,IAAI,EAAA,mBAAiB,GAC5C,EAAK,OAAS,EAAA,QAAa,EAAE,GAC7B,EAAK,QAAU,EAAO,IAAI,SAAA,GACX,MAAA,CACH,MAAO,EAAE,MACT,MAAO,EAAA,QAAa,EAAE,EAAE,UAIpB,IAAA,IAAA,EAAA,EAAA,EAAA,EAAK,QAAL,EAAA,EAAA,OAAA,IAAc,CAAnB,IAAA,EAAC,EAAA,GACR,EAAK,SAAS,EAAE,MAAM,SArBrB,OAuBL,EAAK,SAAS,EAAK,QAEnB,EAAK,QAAQ,cAzBR,EA0Fb,OA1FiC,EAAA,EAAA,GA8B7B,EAAA,UAAA,SAAA,WACW,OAAA,KAAK,QAGhB,EAAA,UAAA,UAAA,SAAU,GACF,IAAC,KAAK,QAAQ,GACP,OAAA,EAEN,KAAA,OAAO,QAAQ,IAGxB,EAAA,UAAA,QAAA,SAAQ,GACgB,IAAA,IAAA,EAAA,EAAA,EAAA,KAAK,QAAL,EAAA,EAAA,OAAA,IAAc,CAC1B,GADQ,EAAA,GACF,QAAU,EACT,OAAA,EAGR,OAAA,GAIX,EAAA,UAAA,YAAA,WACO,GAAA,KAAK,QAAQ,QAAS,EACd,MAAA,GAIN,IADD,IAAA,EAAU,GACL,EAAI,EAAG,EAAI,KAAK,QAAQ,OAAQ,IACrC,GAAW,kBAAoB,EAAI,KAAO,KAAK,QAAQ,GAAG,MAAM,cAAgB,YAG7E,MAAA,8BACuB,KAAK,GAAK,KAAO,KAAK,OAAO,SAAW,mCACtC,KAAK,GAAK,kBAAoB,KAAK,GAAK,KACpE,EACA,oBAIE,EAAA,UAAA,YAAV,SAAsB,GACd,IAAA,EAAI,SAAS,eAAe,YAAc,KAAK,IAChD,GAAM,OAAN,EAAA,CAGG,IAAA,EAAO,KACb,EAAE,SAAY,WAEN,IAAA,EAAQ,SAAS,EAAE,eACvB,EAAK,OAAO,QAAQ,EAAK,QAAQ,GAAO,QAIvC,IADD,IAAA,EAAI,KAAK,OAAO,KACX,EAAI,EAAG,EAAI,KAAK,QAAQ,OAAS,IAAK,CAC7B,KAAK,QAAQ,GAAG,QAChB,IAEV,EAAE,cAAgB,MAIlC,EA1FA,CAAiC,EAAA,cAApB,QAAA,SAAA;;ACFb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IALA,IAAA,EAAA,QAAA,uBACA,EAAA,QAAA,sBAEM,EAAS,IAAI,EAAA,cAAc,IAE3B,EAAK,IAAI,EAAA,SAAS,OAAQ,CAC5B,CAAC,MAAO,EAAG,MAAO,QAClB,CAAC,MAAO,GAAI,MAAO,QACpB,GAAQ,SAAS","file":"test.df8d7414.js","sourceRoot":"..","sourcesContent":["export class UIEventSource<T>{\n    \n    public data: T;\n    private _callbacks = [];\n\n    constructor(data: T) {\n        this.data = data;\n    }\n\n\n    public addCallback(callback: ((latestData : T) => void)) {\n        this._callbacks.push(callback);\n        return this;\n    }\n\n    public setData(t: T): void {\n        if (this.data === t) {\n            return;\n        }\n        this.data = t;\n        this.ping();\n    }\n\n    public ping(): void {\n        for (const callback of this._callbacks) {\n            callback(this.data);\n        }\n    }\n\n    public static flatten<X>(source: UIEventSource<UIEventSource<X>>, possibleSources: UIEventSource<any>[]): UIEventSource<X> {\n        const sink = new UIEventSource<X>(source.data?.data);\n\n        source.addCallback((latestData) => {\n           sink.setData(latestData?.data);\n        });\n\n        for (const possibleSource of possibleSources) {\n            possibleSource.addCallback(() => {\n                sink.setData(source.data?.data);\n                \n            })\n        }\n        \n        return sink;\n    }\n    \n    public map<J>(f: ((T) => J),\n                  extraSources: UIEventSource<any>[] = []): UIEventSource<J> {\n        const self = this;\n\n        const update = function () {\n            newSource.setData(f(self.data));\n            newSource.ping();\n        }\n\n        this.addCallback(update);\n        for (const extraSource of extraSources) {\n            extraSource.addCallback(update);\n        }\n        const newSource = new UIEventSource<J>(\n            f(this.data)\n        );\n        \n\n        return newSource;\n\n    }\n\n    \n    public syncWith(otherSource: UIEventSource<T>) : UIEventSource<T>{\n        this.addCallback((latest) => otherSource.setData(latest));\n        const self = this;\n        otherSource.addCallback((latest) => self.setData(latest));\n        if(this.data === undefined){\n           this.setData(otherSource.data);\n        }else{\n            otherSource.setData(this.data);\n        }\n        return this;\n    }\n\n}","import {UIEventSource} from \"./UIEventSource\";\n\nexport abstract class UIElement {\n    \n    private static nextId: number = 0;\n\n    public readonly id: string;\n    public readonly _source: UIEventSource<any>;\n    \n    private _hideIfEmpty = false;\n    \n    // WOrkaround as document is not defined\n    public static runningFromConsole = false;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        this._source = source;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    public ListenTo(source: UIEventSource<any>) {\n        if (source === undefined) {\n            return this;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n        return this;\n    }\n\n    private _onClick: () => void;\n\n    public onClick(f: (() => void)) {\n        this._onClick = f;\n        this.Update();\n        return this;\n    }\n    \n    Update(): void {\n        if(UIElement.runningFromConsole){\n            return;\n        }\n        \n        let element = document.getElementById(this.id);\n        if (element === undefined || element === null) {\n            // The element is not painted\n            return;\n        }\n        element.innerHTML = this.InnerRender();\n        if (this._hideIfEmpty) {\n            if (element.innerHTML === \"\") {\n                element.parentElement.style.display = \"none\";\n            } else {\n                element.parentElement.style.display = undefined;\n            }\n        }\n\n        if (this._onClick !== undefined) {\n            const self = this;\n            element.onclick = (e) => {\n                // @ts-ignore\n                if(e.consumed){\n                    return;\n                }\n                self._onClick();\n                // @ts-ignore\n                e.consumed = true;\n            }\n            element.style.pointerEvents = \"all\";\n            element.style.cursor = \"pointer\";\n        }\n\n        this.InnerUpdate(element);\n\n        for (const i in this) {\n            const child = this[i];\n            if (child instanceof UIElement) {\n                child.Update();\n            } else if (child instanceof Array) {\n                for (const ch of child) {\n                    if (ch instanceof UIElement) {\n                        ch.Update();\n                    }\n                }\n            }\n        }\n    }\n    \n    HideOnEmpty(hide : boolean){\n        this._hideIfEmpty = hide;\n        this.Update();\n        return this;\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n   protected InnerUpdate(htmlElement: HTMLElement) {\n   }\n\n    Render(): string {\n        return \"<span class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</span>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        if (element === null) {\n            throw \"SEVERE: could not attach UIElement to \" + divId;\n        }\n        element.innerHTML = this.Render();\n        this.Update();\n        return this;\n    }\n\n    public abstract InnerRender(): string;\n\n    public Activate(): void {\n        for (const i in this) {\n            const child = this[i];\n            if (child instanceof UIElement) {\n                child.Activate();\n            } else if (child instanceof Array) {\n                for (const ch of child) {\n                    if (ch instanceof UIElement) {\n                        ch.Activate();\n                    }\n                }\n            }\n        }\n    };\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n}\n\n\n","import {UIElement} from \"../UIElement\";\nimport {UIEventSource} from \"../UIEventSource\";\nimport {FixedUiElement} from \"../Base/FixedUiElement\";\n\nexport abstract class InputElement<T> extends UIElement{\n    \n    abstract GetValue() : UIEventSource<T>;\n    \n    abstract IsValid(t: T) : boolean;\n    \n}\n\n","import {UIEventSource} from \"../UI/UIEventSource\";\n\nexport class LocalStorageSource {\n\n    static Get(key: string, defaultValue: string = undefined): UIEventSource<string> {\n        \n        //*\n            // ignore when running from the console\n            return new UIEventSource<string>(defaultValue);\n            /*/\n        const saved = localStorage.getItem(key);\n        const source = new UIEventSource<string>(saved ?? defaultValue);\n\n        source.addCallback((data) => {\n            localStorage.setItem(key, data);\n            console.log(\"Wriging \", key, data)\n        });\n        return source;\n        //*/\n    }\n}","import {UIEventSource} from \"../UIEventSource\";\nimport {LocalStorageSource} from \"../../Logic/LocalStorageSource\";\nimport {DropDown} from \"../Input/DropDown\";\nimport {Layout} from \"../../Customizations/Layout\";\nimport {UIElement} from \"../UIElement\";\n\n\nexport default class Locale {\n    public static language: UIEventSource<string> = LocalStorageSource.Get('language', \"en\");\n\n    public static CreateLanguagePicker(layoutToUse: Layout, label: string | UIElement = \"\") {\n\n        return new DropDown(label, layoutToUse.supportedLanguages.map(lang => {\n                return {value: lang, shown: lang}\n            }\n        ), Locale.language);\n    }\n}\n\n\n","import {UIElement} from \"../UIElement\";\nimport Translations from \"../i18n/Translations\";\n\nexport default class Combine extends UIElement {\n    private uiElements: (string | UIElement)[];\n    private clas: string = undefined;\n\n    constructor(uiElements: (string | UIElement)[]) {\n        super(undefined);\n        this.uiElements = uiElements;\n    }\n\n    InnerRender(): string {\n        let elements = \"\";\n        for (const element of this.uiElements) {\n            if (element instanceof UIElement) {\n                elements += element.Render();\n            } else {\n                elements += element;\n            }\n        }\n        return elements;\n    }\n\n    InnerUpdate(htmlElement: HTMLElement) {\n        for (const element of this.uiElements) {\n            if (element instanceof UIElement) {\n                element.Update();\n            }\n        }\n    }\n}","import {UIElement} from \"../UIElement\"\nimport Locale from \"./Locale\"\nimport {FixedUiElement} from \"../Base/FixedUiElement\";\nimport {TagUtils} from \"../../Logic/TagsFilter\";\nimport Combine from \"../Base/Combine\";\n\n\nexport default class Translation extends UIElement {\n\n    private static forcedLanguage = undefined;\n\n    public Subs(text: any /*Map<string, string | UIElement>*/) {\n        const newTranslations = {};\n        for (const lang in this.translations) {\n            let template: string = this.translations[lang];\n            for (const k in text) {\n                const combined = [];\n                const parts = template.split(\"{\" + k + \"}\");\n                const el: string | UIElement = text[k];\n                let rtext: string = \"\";\n                if (typeof (el) === \"string\") {\n                    rtext = el;\n                } else {\n                    Translation.forcedLanguage = lang; // This is a very dirty hack - it'll bite me one day\n                    rtext = el.InnerRender();\n                }\n                for (let i = 0; i < parts.length - 1; i++) {\n                    combined.push(parts[i]);\n                    combined.push(rtext)\n                }\n                combined.push(parts[parts.length - 1]);\n                template = new Combine(combined).InnerRender();\n            }\n            newTranslations[lang] = template;\n        }\n        Translation.forcedLanguage = undefined;\n        return new Translation(newTranslations);\n\n    }\n\n\n    get txt(): string {\n        const txt = this.translations[Translation.forcedLanguage ?? Locale.language.data];\n        if (txt !== undefined) {\n            return txt;\n        }\n        const en = this.translations[\"en\"];\n        console.warn(\"No translation for language \", Locale.language.data, \"for\", en);\n        if (en !== undefined) {\n            return en;\n        }\n        for (const i in this.translations) {\n            return this.translations[i]; // Return a random language\n        }\n        return \"Missing translation\"\n    }\n\n    InnerRender(): string {\n        return this.txt\n    }\n\n    public readonly translations: object\n\n    constructor(translations: object) {\n        super(Locale.language)\n        this.translations = translations\n    }\n\n\n    public R(): string {\n        return new Translation(this.translations).Render();\n    }\n\n    public Clone() {\n        return new Translation(this.translations)\n    }\n\n \n}\n","import {UIElement} from \"../UIElement\";\n\nexport class FixedUiElement extends UIElement {\n    private _html: string;\n\n    constructor(html: string) {\n        super(undefined);\n        this._html = html ?? \"\";\n    }\n\n    InnerRender(): string {\n        return this._html;\n    }\n\n\n}","import Translation from \"./Translation\";\nimport T from \"./Translation\";\nimport {UIElement} from \"../UIElement\";\nimport {FixedUiElement} from \"../Base/FixedUiElement\";\n\n\nexport default class Translations {\n\n    constructor() {\n        throw \"Translations is static. If you want to intitialize a new translation, use the singular form\"\n    }\n\n\n    static t = {\n        cyclofix: {\n            title: new T({\n                en: 'Cyclofix - an open map for cyclists',\n                nl: 'Cyclofix - een open kaart voor fietsers',\n                fr: 'TODO: FRENCH TRANSLATION'\n            }),\n            description: new T({\n                en: \"On this map we want to collect data about the whereabouts of bicycle pumps and public racks in Brussels and everywhere else.\" +\n                    \"As a result, cyclists will be able to quickly find the nearest infrastructure for their needs.\",\n                nl: \"Op deze kaart willen we gegevens verzamelen over de locatie van fietspompen en openbare stelplaatsen in Brussel en overal ter wereld.\" +\n                    \"Hierdoor kunnen fietsers snel de dichtstbijzijnde infrastructuur vinden die voldoet aan hun behoeften.\",\n                fr: \"Sur cette carte, nous voulons collecter des données sur la localisation des pompes à vélo et des supports publics à Bruxelles.\" +\n                    \"Les cyclistes pourront ainsi trouver rapidement l'infrastructure la plus proche de leurs besoins.\"\n            }),\n            freeFormPlaceholder: new T({en: 'specify', nl: 'specifieer', fr: 'TODO: fr'}),\n            parking: {\n                name: new T({en: 'bike parking', nl: 'fietsparking', fr: 'TODO: fr'}),\n                title: new T({en: 'Bike parking', nl: 'Fietsparking', fr: 'TODO: fr'}),\n                type: {\n                    render: new T({\n                        en: 'This is a bicycle parking of the type: {bicycle_parking}',\n                        nl: 'Dit is een fietsenparking van het type: {bicycle_parking}',\n                        fr: 'TODO: fr'\n                    }),\n                    template: new T({en: 'Some other type: $$$', nl: 'Een ander type: $$$', fr: 'TODO: fr'}),\n                    question: new T({\n                        en: 'What is the type of this bicycle parking?',\n                        nl: 'Van welk type is deze fietsenparking?',\n                        fr: 'TODO: fr'\n                    }),\n                    eg: new T({en: \", for example\", nl: \", bijvoorbeeld\"}),\n                    stands: new T({en: 'Staple racks', nl: 'Nietjes', fr: 'TODO: fr'}),\n                    wall_loops: new T({en: 'Wheel rack/loops', nl: 'Wielrek/lussen', fr: 'TODO: fr'}),\n                    handlebar_holder: new T({en: 'Handlebar holder', nl: 'Stuurhouder', fr: 'TODO: fr'}),\n                    shed: new T({en: 'Shed', nl: 'Schuur', fr: 'TODO: fr'}),\n                    rack: new T({en: 'Rack', nl: 'Rek', fr: 'TODO: fr'}),\n                    \"two-tier\": new T({en: 'Two-tiered', nl: 'Dubbel (twee verdiepingen)', fr: 'TODO: fr'}),\n                },\n\n                operator: {\n                    render: new T({\n                        en: 'This bike parking is operated by {operator}',\n                        nl: 'Deze fietsenparking wordt beheerd door {operator}',\n                        fr: 'TODO: fr'\n                    }),\n                    template: new T({en: 'A different operator: $$$', nl: 'Een andere beheerder: $$$', fr: 'TODO: fr'}),\n                    question: new T({\n                        en: 'Who operates this bike station (name of university, shop, city...)?',\n                        nl: 'Wie beheert deze fietsenparking (naam universiteit, winkel, stad...)?',\n                        fr: 'TODO: fr'\n                    }),\n                    private: new T({\n                        en: 'Operated by a private person',\n                        nl: 'Wordt beheerd door een privépersoon',\n                        fr: 'TODO: fr'\n                    }),\n                }\n            },\n            station: {\n                name: new T({\n                    en: 'bike station (repair, pump or both)',\n                    nl: 'fietsstation (herstel, pomp of allebei)',\n                    fr: 'TODO: fr'\n                }),\n                title: new T({en: 'Bike station', nl: 'Fietsstation', fr: 'TODO: fr'}),\n                manometer: {\n                    question: new T({\n                        en: 'Does the pump have a pressure indicator or manometer?',\n                        nl: 'Heeft deze pomp een luchtdrukmeter?',\n                        fr: 'TODO: fr'\n                    }),\n                    yes: new T({en: 'There is a manometer', nl: 'Er is een luchtdrukmeter', fr: 'TODO: fr'}),\n                    no: new T({en: 'There is no manometer', nl: 'Er is geen luchtdrukmeter', fr: 'TODO: fr'}),\n                    broken: new T({\n                        en: 'There is manometer but it is broken',\n                        nl: 'Er is een luchtdrukmeter maar die is momenteel defect',\n                        fr: 'TODO: fr'\n                    })\n                },\n                electric: {\n                    question: new T({\n                        en: 'Is this an electric bike pump?',\n                        nl: 'Is dit een electrische fietspomp?',\n                        fr: 'TODO: fr'\n                    }),\n                    manual: new T({en: 'Manual pump', nl: 'Manuele pomp', fr: 'TODO: fr'}),\n                    electric: new T({en: 'Electrical pump', nl: 'Electrische pomp', fr: 'TODO: fr'})\n                },\n                operational: {\n                    question: new T({\n                        en: 'Is the bike pump still operational?',\n                        nl: 'Werkt de fietspomp nog?',\n                        fr: 'TODO: fr'\n                    }),\n                    operational: new T({\n                        en: 'The bike pump is operational',\n                        nl: 'De fietspomp werkt nog',\n                        fr: 'TODO: fr'\n                    }),\n                    broken: new T({en: 'The bike pump is broken', nl: 'De fietspomp is kapot', fr: 'TODO: fr'})\n                },\n                valves: {\n                    question: new T({\n                        en: 'What valves are supported?',\n                        nl: 'Welke ventielen werken er met de pomp?',\n                        fr: 'TODO: fr'\n                    }),\n                    default: new T({\n                        en: 'There is a default head, so Dunlop, Sclaverand and auto',\n                        nl: 'Er is een standaard aansluiting, die dus voor Dunlop, Sclaverand en auto\\'s werkt',\n                        fr: 'TODO: fr'\n                    }),\n                    dunlop: new T({en: 'Only Dunlop', nl: 'Enkel Dunlop', fr: 'TODO: fr'}),\n                    sclaverand: new T({\n                        en: 'Only Sclaverand (also known as Presta)',\n                        nl: 'Enkel Sclaverand (ook gekend als Presta)',\n                        fr: 'TODO: fr'\n                    }),\n                    auto: new T({en: 'Only for cars', nl: 'Enkel voor auto\\'s', fr: 'TODO: fr'}),\n                    render: new T({\n                        en: 'This pump supports the following valves: {valves}',\n                        nl: 'Deze pomp werkt met de volgende ventielen: {valves}',\n                        fr: 'TODO: fr'\n                    }),\n                    template: new T({\n                        en: 'Some other valve(s): $$$',\n                        nl: 'Een ander type ventiel(en): $$$',\n                        fr: 'TODO: fr'\n                    })\n                },\n                chain: {\n                    question: new T({\n                        en: 'Does this bike station have a special tool to repair your bike chain?',\n                        nl: 'Heeft dit fietsstation een speciale reparatieset voor je ketting?',\n                        fr: 'TODO: fr'\n                    }),\n                    yes: new T({\n                        en: 'There is a chain tool',\n                        nl: 'Er is een reparatieset voor je ketting',\n                        fr: 'TODO: fr'\n                    }),\n                    no: new T({\n                        en: 'There is no chain tool',\n                        nl: 'Er is geen reparatieset voor je ketting',\n                        fr: 'TODO: fr'\n                    }),\n                },\n                operator: {\n                    render: new T({\n                        en: 'This bike station is operated by {operator}',\n                        nl: 'Dit fietsstation wordt beheerd door {operator}',\n                        fr: 'TODO: fr'\n                    }),\n                    template: new T({en: 'A different operator: $$$', nl: 'Een andere beheerder: $$$', fr: 'TODO: fr'}),\n                    question: new T({\n                        en: 'Who operates this bike station (name of university, shop, city...)?',\n                        nl: 'Wie beheert dit fietsstation (naam universiteit, winkel, stad...)?',\n                        fr: 'TODO: fr'\n                    }),\n                    private: new T({\n                        en: 'Operated by a private person',\n                        nl: 'Wordt beheerd door een privépersoon',\n                        fr: 'TODO: fr'\n                    }),\n                },\n                services: {\n                    question: new T({\n                        en: 'Which services are available at this bike station?',\n                        nl: 'Welke functies biedt dit fietsstation?',\n                        fr: 'TODO: fr'\n                    }),\n                    pump: new T({\n                        // Note: this previously read: a pump is available. It is not because the pump is present, that it is available (e.g. broken)\n                        en: 'There is only a pump present',\n                        nl: 'Er is enkel een pomp aanwezig',\n                        fr: 'TODO: fr'\n                    }),\n                    tools: new T({\n                        en: 'There are only tools (screwdrivers, pliers...) aanwezig',\n                        nl: 'Er is enkel gereedschap aanwezig (schroevendraaier, tang...)',\n                        fr: 'TODO: fr'\n                    }),\n                    both: new T({\n                        en: 'There are both tools and a pump present',\n                        nl: 'Er is zowel een pomp als gereedschap aanwezig',\n                        fr: 'TODO: fr'\n                    }),\n                },\n                stand: {\n                    question: new T({\n                        en: 'Does this bike station have a hook to suspend your bike with or a stand to elevate it?',\n                        nl: 'Heeft dit fietsstation een haak of standaard om je fiets op te hangen/zetten?',\n                        fr: 'TODO: fr'\n                    }),\n                    yes: new T({en: 'There is a hook or stand', nl: 'Er is een haak of standaard', fr: 'TODO: fr'}),\n                    no: new T({en: 'There is no hook or stand', nl: 'Er is geen haak of standaard', fr: 'TODO: fr'}),\n                }\n            },\n            shop: {\n                name: new T({en: 'bike shop', nl: 'fietswinkel', fr: 'TODO: fr'}),\n                \n                title: new T({en: 'Bike shop', nl: 'Fietszaak', fr: 'TODO: fr'}),\n                titleRepair: new T({en: 'Bike repair', nl: 'Fietsenmaker', fr: 'TODO: fr'}),\n                titleShop: new T({en: 'Bike repair/shop', nl: 'Fietswinkel', fr: 'TODO: fr'}),\n                \n                titleNamed: new T({en: 'Bike repair/shop', nl: 'Fietszaak {name}', fr: 'TODO: fr'}),\n                titleRepairNamed: new T({en: 'Bike shop', nl: 'Fietsenmaker {name}', fr: 'TODO: fr'}),\n                titleShopNamed: new T({en: 'Bike repair/shop', nl: 'Fietswinkel {name}', fr: 'TODO: fr'}),\n\n\n\n                retail: {\n                    question: new T({\n                        en: 'Does this shop sell bikes?',\n                        nl: 'Verkoopt deze winkel fietsen?',\n                        fr: 'TODO: fr'\n                    }),\n                    yes: new T({en: 'This shop sells bikes', nl: 'Deze winkel verkoopt fietsen', fr: 'TODO: fr'}),\n                    no: new T({\n                        en: 'This shop doesn\\'t sell bikes',\n                        nl: 'Deze winkel verkoopt geen fietsen',\n                        fr: 'TODO: fr'\n                    }),\n                },\n                repair: {\n                    question: new T({\n                        en: 'Does this shop repair bikes?',\n                        nl: 'Verkoopt deze winkel fietsen?',\n                        fr: 'TODO: fr'\n                    }),\n                    yes: new T({en: 'This shop repairs bikes', nl: 'Deze winkel herstelt fietsen', fr: 'TODO: fr'}),\n                    no: new T({\n                        en: 'This shop doesn\\'t repair bikes',\n                        nl: 'Deze winkel herstelt geen fietsen',\n                        fr: 'TODO: fr'\n                    }),\n                    sold: new T({en: 'This shop only repairs bikes bought here', nl: 'Deze winkel herstelt enkel fietsen die hier werden gekocht', fr: 'TODO: fr'}),\n                    brand: new T({en: 'This shop only repairs bikes of a certain brand', nl: 'Deze winkel herstelt enkel fietsen van een bepaald merk', fr: 'TODO: fr'}),\n                },\n                rental: {\n                    question: new T({\n                        en: 'Does this shop rent out bikes?',\n                        nl: 'Verhuurt deze winkel fietsen?',\n                        fr: 'TODO: fr'\n                    }),\n                    yes: new T({en: 'This shop rents out bikes', nl: 'Deze winkel verhuurt fietsen', fr: 'TODO: fr'}),\n                    no: new T({\n                        en: 'This shop doesn\\'t rent out bikes',\n                        nl: 'Deze winkel verhuurt geen fietsen',\n                        fr: 'TODO: fr'\n                    }),\n                },\n                pump: {\n                    question: new T({\n                        en: 'Does this shop offer a bike pump for use by anyone?',\n                        nl: 'Biedt deze winkel een fietspomp aan voor iedereen?',\n                        fr: 'TODO: fr'\n                    }),\n                    yes: new T({\n                        en: 'This shop offers a bike pump for anyone',\n                        nl: 'Deze winkel biedt geen fietspomp aan voor eender wie',\n                        fr: 'TODO: fr'\n                    }),\n                    no: new T({\n                        en: 'This shop doesn\\'t offer a bike pump for anyone',\n                        nl: 'Deze winkel biedt een fietspomp aan voor iedereen',\n                        fr: 'TODO: fr'\n                    })\n                },\n                qName: {\n                    question: new T({en: 'What is the name of this bicycle shop?', nl: 'Wat is de naam van deze fietszaak?', fr: 'TODO: fr'}),\n                    render: new T({en: 'This bicycle shop is called {name}', nl: 'Deze fietszaak heet <b>{name}</b>', fr: 'TODO: fr'}),\n                    template: new T({en: 'This bicycle shop is called: $$$', nl: 'Deze fietszaak heet: <b>$$$</b>', fr: 'TODO: fr'})\n                },\n                secondHand: {\n                    question: new T({en: 'Does this shop sell second-hand bikes?', nl: 'Verkoopt deze winkel tweedehands fietsen?', fr: 'TODO: fr'}),\n                    yes: new T({en: 'This shop sells second-hand bikes', nl: 'Deze winkel verkoopt tweedehands fietsen', fr: 'TODO: fr'}),\n                    no: new T({en: 'This shop doesn\\'t sell second-hand bikes', nl: 'Deze winkel verkoopt geen tweedehands fietsen', fr: 'TODO: fr'}),\n                    only: new T({en: 'This shop only sells second-hand bikes', nl: 'Deze winkel verkoopt enkel tweedehands fietsen', fr: 'TODO: fr'}),\n                },\n                diy: {\n                    question: new T({\n                        en: 'Are there tools here to repair your own bike?',\n                        nl: 'Biedt deze winkel gereedschap aan om je fiets zelf te herstellen?',\n                        fr: 'TODO: fr'\n                    }),\n                    yes: new T({\n                        en: 'This shop offers tools for DIY repair',\n                        nl: 'Deze winkel biedt gereedschap aan om je fiets zelf te herstellen',\n                        fr: 'TODO: fr'\n                    }),\n                    no: new T({\n                        en: 'This shop doesn\\'t offer tools for DIY repair',\n                        nl: 'Deze winkel biedt geen gereedschap aan om je fiets zelf te herstellen',\n                        fr: 'TODO: fr'\n                    }),\n                }\n            },\n            drinking_water: {\n                title: new T({\n                    en: 'Drinking water',\n                    nl: \"Drinkbaar water\"\n                })\n            }\n        },\n        bookcases: {\n            title: new T({en: \"Open Bookcase Map\", nl: \"Open Boekenkastjes kaart\"}),\n            description: new T({\n                    en: \"Search a bookcase near you and add information about them in the biggest shared map of the world.\",\n                    nl: \"Help mee met het creëeren van een volledige kaart met alle boekenruilkastjes!\" +\n                        \"Een boekenruilkastje is een vaste plaats in publieke ruimte waar iedereen een boek in kan zetten of uit kan meenemen.\" +\n                        \"Meestal een klein kastje of doosje dat op straat staat, maar ook een oude telefooncellen of een schap in een station valt hieronder.\"\n                }\n            ),\n            bookcase: new T({\n                nl: \"Boekenruilkastje\"\n            })\n        },\n\n        image: {\n            addPicture: new T({en: 'Add picture', nl: 'Voeg foto toe', fr: 'TODO: fr'}),\n            uploadingPicture: new T({\n                en: 'Uploading your picture...',\n                nl: 'Bezig met een foto te uploaden...',\n                fr: 'TODO: fr'\n            }),\n            pleaseLogin: new T({\n                en: 'Please login to add a picure or to answer questions',\n                nl: 'Gelieve je aan te melden om een foto toe te voegen of vragen te beantwoorden',\n                fr: 'TODO: fr'\n            }),\n            willBePublished: new T({\n                en: 'Your picture will be published: ',\n                nl: 'Jouw foto wordt gepubliceerd: ',\n                fr: 'TODO: fr'\n            }),\n            cco: new T({en: 'in the public domain', nl: 'in het publiek domein', fr: 'TODO: fr'}),\n            ccbs: new T({en: 'under the CC-BY-SA-license', nl: 'onder de CC-BY-SA-licentie', fr: 'TODO: fr'}),\n            ccb: new T({en: 'under the CC-BY-license', nl: 'onder de CC-BY-licentie', fr: 'TODO: fr'})\n        },\n        centerMessage: {\n            loadingData: new T({en: 'Loading data...', nl: 'Data wordt geladen...', fr: 'TODO: fr'}),\n            zoomIn: new T({\n                en: 'Zoom in to view or edit the data',\n                nl: 'Zoom in om de data te zien en te bewerken',\n                fr: 'TODO: fr'\n            }),\n            ready: new T({en: 'Done!', nl: 'Klaar!', fr: 'TODO: fr'}),\n        },\n        general: {\n            loginWithOpenStreetMap: new T({en: \"Login with OpenStreetMap\", nl: \"Aanmelden met OpenStreetMap\"}),\n            getStarted: new T({\n                en: \"<span class='activate-osm-authentication'>Login with OpenStreetMap</span> or <a href='https://www.openstreetmap.org/user/new' target='_blank'>make a free account to get started</a>\",\n                nl: \"<span class='activate-osm-authentication'>Meld je aan met je OpenStreetMap-account</span> of <a href='https://www.openstreetmap.org/user/new' target='_blank'>maak snel en gratis een account om te beginnen</a>\",\n            }),\n            welcomeBack: new T({\n                en: \"You are logged in, welcome back!\",\n                nl: \"Je bent aangemeld. Welkom terug!\"\n            }),\n            search: {\n                search: new Translation({\n                    en: \"Search a location\",\n                    nl: \"Zoek naar een locatie\"\n                }),\n                searching: new Translation({\n                    en: \"Searching...\",\n                    nl: \"Aan het zoeken...\"\n                }),\n                nothing: new Translation({\n                    en: \"Nothing found...\",\n                    nl: \"Niet gevonden...\"\n                }),\n                error: new Translation({\n                    en: \"Something went wrong...\",\n                    nl: \"Niet gelukt...\"\n                })\n\n            },\n            returnToTheMap: new T({\n                en: \"Return to the map\",\n                nl: \"Naar de kaart\"\n            }),\n            save: new T({\n                en: \"Save\",\n                nl: \"Opslaan\"\n            }),\n            cancel: new T({\n                en: \"Cancel\",\n                nl: \"Annuleren\"\n            }),\n            skip: new T({\n                en: \"Skip this question\",\n                nl: \"Vraag overslaan\"\n            }),\n            oneSkippedQuestion: new T({\n                en: \"One question is skipped\",\n                nl: \"Een vraag is overgeslaan\"\n            }),\n            skippedQuestions: new T({\n                en: \"Some questions are skipped\",\n                nl: \"Sommige vragen zijn overgeslaan\"\n            }),\n            number: new T({\n                en: \"number\",\n                nl: \"getal\"\n            }),\n\n            osmLinkTooltip: new T({\n               en: \"See this object on OpenStreetMap for history and more editing options\",\n                nl: \"Bekijk dit object op OpenStreetMap waar geschiedenis en meer aanpasopties zijn\"\n            }),\n            \n            add: {\n\n                addNew: new T({\n                    en: \"Add a new {category} here\",\n                    nl: \"Voeg hier een {category} toe\"\n                }),\n                header: new T({\n                    en: \"<h2>No data</h2>You clicked somewhere where no data is known yet.<br/>\",\n                    nl: \"<h2>Geen selectie</h2>Je klikte ergens waar er nog geen data is.<br/>\"\n                }),\n                pleaseLogin: new T({\n                    en: \"<a class='activate-osm-authentication'>Please log in to add a new point</a>\",\n                    nl: \"<a class='activate-osm-authentication'>Gelieve je aan te melden om een punt to te voegen</a>\"\n                }),\n                zoomInFurther: new T({\n                    en: \"Zoom in further to add a point.\",\n                    nl: \"Gelieve verder in te zoomen om een punt toe te voegen\"\n                }),\n                stillLoading: new T({\n                    en: \"The data is still loading. Please wait a bit before you add a new point\",\n                    nl: \"De data wordt nog geladen. Nog even geduld en dan kan je een punt toevoegen.\"\n                })\n            },\n            pickLanguage: new T({\n                en: \"Choose a language\",\n                nl: \"Kies je taal\"\n            }),\n            about: new T({\n                en: \"Easily edit and add OpenStreetMap for a certain theme\",\n                nl: \"Easily edit and add OpenStreetMap for a certain theme\"\n\n            }),\n            nameInlineQuestion: new T({\n              nl:  \"De naam van dit {category} is $$$\"\n            }),\n            noNameCategory: new T({\n                nl: \"{category} zonder naam\"\n            })\n        }\n    }\n\n    public static W(s: string | UIElement): UIElement {\n        if (s instanceof UIElement) {\n            return s;\n        }\n        return new FixedUiElement(s);\n    }\n\n    public static CountTranslations() {\n        const queue: any = [Translations.t];\n        const tr: Translation[] = [];\n        while (queue.length > 0) {\n            const item = queue.pop();\n            if (item instanceof Translation || item.translations !== undefined) {\n                tr.push(item);\n            } else {\n                for (const t in item) {\n                    const x = item[t];\n                    queue.push(x)\n                }\n            }\n        }\n\n        const langaugeCounts = {};\n        for (const translation of tr) {\n            for (const language in translation.translations) {\n                if (langaugeCounts[language] === undefined) {\n                    langaugeCounts[language] = 1\n                } else {\n                    langaugeCounts[language]++;\n                }\n            }\n        }\n        for (const language in langaugeCounts) {\n            console.log(\"Total translations in \", language, langaugeCounts[language], \"/\", tr.length)\n        }\n\n    }\n\n}\n","import {UIEventSource} from \"../UIEventSource\";\nimport {UIElement} from \"../UIElement\";\nimport {InputElement} from \"./InputElement\";\nimport instantiate = WebAssembly.instantiate;\nimport {FixedUiElement} from \"../Base/FixedUiElement\";\nimport Translations from \"../i18n/Translations\";\n\nexport class DropDown<T> extends InputElement<T> {\n\n    private readonly _label: UIElement;\n    private readonly _values: { value: T; shown: UIElement }[];\n\n    private readonly _value : UIEventSource<T>;\n\n    constructor(label: string | UIElement,\n                values: { value: T, shown: string | UIElement }[],\n                value: UIEventSource<T> = undefined) {\n        super(undefined);\n        this._value = value ?? new UIEventSource<T>(undefined);\n        this._label = Translations.W(label);\n        this._values = values.map(v => {\n                return {\n                    value: v.value,\n                    shown: Translations.W(v.shown)\n                }\n            }\n        );\n        for (const v of this._values) {\n            this.ListenTo(v.shown._source);\n        }\n        this.ListenTo(this._value);\n        \n        this.onClick(() => {}) // by registering a click, the click event is consumed and doesn't bubble furter to other elements, e.g. checkboxes\n        \n\n    }\n\n    GetValue(): UIEventSource<T> {\n        return this._value;\n    }\n\n    ShowValue(t: T): boolean {\n        if (!this.IsValid(t)) {\n            return false;\n        }\n        this._value.setData(t);\n    }\n\n    IsValid(t: T): boolean {\n        for (const value of this._values) {\n            if (value.value === t) {\n                return true;\n            }\n        }\n        return false\n    }\n\n\n    InnerRender(): string {\n        if(this._values.length <=1){\n            return \"\";\n        }\n        \n        let options = \"\";\n        for (let i = 0; i < this._values.length; i++) {\n            options += \"<option value='\" + i + \"'>\" + this._values[i].shown.InnerRender() + \"</option>\"\n        }\n        \n        return \"<form>\" +\n            \"<label for='dropdown-\" + this.id + \"'>\" + this._label.Render() + \" </label>\" +\n            \"<select name='dropdown-\" + this.id + \"' id='dropdown-\" + this.id + \"'>\" +\n            options +\n            \"</select>\" +\n            \"</form>\";\n    }\n\n    protected InnerUpdate(element) {\n        var e = document.getElementById(\"dropdown-\" + this.id);\n        if(e === null){\n            return;\n        }\n        const self = this;\n        e.onchange = (() => {\n            // @ts-ignore\n            var index = parseInt(e.selectedIndex);\n            self._value.setData(self._values[index].value);\n        });\n\n        var t = this._value.data;\n        for (let i = 0; i < this._values.length ; i++) {\n            const value = this._values[i].value;\n            if (value === t) {\n                // @ts-ignore\n                e.selectedIndex = i;\n            }\n        }\n    }\n}","import {DropDown} from \"./UI/Input/DropDown\";\nimport {UIEventSource} from \"./UI/UIEventSource\";\n\nconst source = new UIEventSource(10)\n\nconst dd = new DropDown(\"Test\", [\n    {value: 5, shown: \"five\"},\n    {value: 10, shown: \"ten\"}\n], source).AttachTo(\"maindiv\")\n"]}