{"version":3,"sources":["UI/UIElement.ts","UI/QuestionPicker.ts"],"names":[],"mappings":"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","file":"QuestionPicker.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\nimport {Playground} from \"../Layers/Playground\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n    public readonly _source: UIEventSource<any>;\n    \n    private _hideIfEmpty = false;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        this._source = source;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if (source === undefined) {\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    private _onClick: () => void;\n\n    public onClick(f: (() => void)) {\n        this._onClick = f;\n        this.Update();\n        return this;\n    }\n\n    Update(): void {\n        let element = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n\n        element.innerHTML = this.InnerRender();\n        if (this._hideIfEmpty) {\n            if (element.innerHTML === \"\") {\n                element.parentElement.style.display = \"none\";\n            } else {\n                element.parentElement.style.display = undefined;\n            }\n        }\n\n        if (this._onClick !== undefined) {\n            const self = this;\n            element.onclick = () => {\n                self._onClick();\n            }\n            element.style.pointerEvents = \"all\";\n            element.style.cursor = \"pointer\";\n        }\n\n        this.InnerUpdate(element);\n    }\n    \n    HideOnEmpty(hide : boolean){\n        this._hideIfEmpty = hide;\n        this.Update();\n        return this;\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    InnerUpdate(htmlElement : HTMLElement){}\n\n    Render(): string {\n        return \"<span class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</span>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        if(element === null){\n            console.log(\"SEVERE: could not attach UIElement to \", divId);\n            return;\n        }\n        element.innerHTML = this.Render();\n        this.Update();\n        return this;\n    }\n\n    protected abstract InnerRender(): string;\n    public Activate(): void {};\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","import {UIElement} from \"./UIElement\";\nimport {Question} from \"../Logic/Question\";\nimport {UIEventSource} from \"./UIEventSource\";\n\nexport class QuestionPicker extends UIElement {\n    private readonly _questions: Question[];\n    private readonly tags: any;\n    private source: UIEventSource<any>;\n\n    constructor(questions: Question[],\n                tags: UIEventSource<any>) {\n        super(tags);\n        this._questions = questions;\n        this.tags = tags.data;\n        this.source = tags;\n    }\n\n\n    protected InnerRender(): string {\n\n        let t = this.tags;\n        let highestPriority = Number.MIN_VALUE;\n        let highestQ: Question;\n        for (const q of this._questions) {\n            \n            if (!q.Applicable(t)) {\n                continue;\n            }\n\n            const priority = q.question.severity;\n            if (priority > highestPriority) {\n                highestPriority = priority;\n                highestQ = q;\n            }\n        }\n\n\n        if (highestQ === undefined) {\n            return \"Er zijn geen vragen meer!\";\n        }\n\n        return \"<div class='infobox-questions'>\" +\n            highestQ.CreateHtml(this.source).Render() +\n            \"</div>\";\n    }\n    InnerUpdate(htmlElement: HTMLElement) {\n    }\n    \n    Activate() {\n    }\n\n}"]}