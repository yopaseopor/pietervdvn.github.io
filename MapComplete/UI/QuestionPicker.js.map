{"version":3,"sources":["UI/UIElement.ts","UI/QuestionPicker.ts"],"names":[],"mappings":"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","file":"QuestionPicker.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n    public readonly _source: UIEventSource<any>;\n    \n    private _hideIfEmpty = false;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        this._source = source;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    public ListenTo(source: UIEventSource<any>) {\n        if (source === undefined) {\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    private _onClick: () => void;\n\n    public onClick(f: (() => void)) {\n        this._onClick = f;\n        this.Update();\n        return this;\n    }\n\n    Update(): void {\n        let element = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n\n        element.innerHTML = this.InnerRender();\n        if (this._hideIfEmpty) {\n            if (element.innerHTML === \"\") {\n                element.parentElement.style.display = \"none\";\n            } else {\n                element.parentElement.style.display = undefined;\n            }\n        }\n\n        if (this._onClick !== undefined) {\n            const self = this;\n            element.onclick = () => {\n                self._onClick();\n            }\n            element.style.pointerEvents = \"all\";\n            element.style.cursor = \"pointer\";\n           /*\n            const childs = element.children;\n            for (let i = 0; i < childs.length; i++) {\n                const ch = childs[i];\n                console.log(ch);\n                ch.style.cursor = \"pointer\";\n                ch.onclick = () => {\n                    self._onClick();\n                }\n                ch.style.pointerEvents = \"all\";\n            }*/\n        }\n\n        this.InnerUpdate(element);\n    }\n    \n    HideOnEmpty(hide : boolean){\n        this._hideIfEmpty = hide;\n        this.Update();\n        return this;\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    InnerUpdate(htmlElement : HTMLElement){}\n\n    Render(): string {\n        return \"<span class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</span>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        if(element === null){\n            console.log(\"SEVERE: could not attach UIElement to \", divId);\n            return;\n        }\n        element.innerHTML = this.Render();\n        this.Update();\n        return this;\n    }\n\n    protected abstract InnerRender(): string;\n    public Activate(): void {};\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","import {UIElement} from \"./UIElement\";\nimport {Question} from \"../Logic/Question\";\nimport {UIEventSource} from \"./UIEventSource\";\n\nexport class QuestionPicker extends UIElement {\n    private readonly _questions: Question[];\n    private readonly tags: any;\n    private source: UIEventSource<any>;\n\n    constructor(questions: Question[],\n                tags: UIEventSource<any>) {\n        super(tags);\n        this._questions = questions;\n        this.tags = tags.data;\n        this.source = tags;\n    }\n\n\n    protected InnerRender(): string {\n\n        let t = this.tags;\n        let highestPriority = Number.MIN_VALUE;\n        let highestQ: Question;\n        for (const q of this._questions) {\n            \n            if (!q.Applicable(t)) {\n                continue;\n            }\n\n            const priority = q.question.severity;\n            if (priority > highestPriority) {\n                highestPriority = priority;\n                highestQ = q;\n            }\n        }\n\n\n        if (highestQ === undefined) {\n            return \"Er zijn geen vragen meer!\";\n        }\n\n        return \"<div class='question'>\" +\n            highestQ.CreateHtml(this.source).Render() +\n            \"</div>\";\n    }\n    InnerUpdate(htmlElement: HTMLElement) {\n    }\n    \n    Activate() {\n    }\n\n}"]}