{"version":3,"sources":["UI/UIElement.ts","UI/UIEventSource.ts","UI/SlideShow.ts"],"names":[],"mappings":";;;;;;;AAGA,ACHA,IDGA,ACHA,SDGA,ICHA;ADGA,ACHA;ADGA,ACHA,YDGA,ACHA;ADYI,ACPA,WDOA,ACPA,SDOA,CAAsB,GCPtB,CAAY,EDOZ,EAAgD,ACPhD,EAAmB;ADKX,ACPA,SDOA,ACPA,UAAA,EDOA,CCPa,EDOE,ACPf,KDOA;AAGJ,ACPA,SDOK,ACPA,EDOL,ECPA,CDOU,ECPE,IAAZ,UDO0B,SAAS,CAAC,MAApC;AACA,ACPH,SDOQ,OAAL,GAAe,MAAf;AACA,IAAA,SAAS,CAAC,MAAV;AACA,ACNG,EAAA,ODME,MCNF,CAAA,CDMH,CAAc,MAAd,CCNG,CAAA,WAAA,GAAP,UAAmB,QAAnB,EAAuD;ADOtD,ACNG,SAAK,UAAL,CAAgB,IAAhB,CAAqB,QAArB;;ADSM,ACRN,EDQM,SAAA,ACRC,CDQD,GCRN,MDQM,CAAA,QAAA,GAAV,UAAmB,MAAnB,EAA6C;AACzC,ACRH,GAHM,KDWC,MAAM,KAAK,SAAf,EAA0B;AACtB;AACH,ACRE,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,CAAf,EAAmB;AACf,QAAI,KAAK,IAAL,KAAc,CAAlB,EAAqB;ADQrB,ACPI,QDOE,IAAI,GAAG,IAAb;AACA,ACPC,IDOD,MAAM,CAAC,WAAP,CAAmB,YAAA;AACf,MAAA,IAAI,CAAC,MAAL;AACH,ACRD,KDMA,ICNK,IAAL,GAAY,CAAZ;ADSH,ACRG,GDAM,MCAD,IAAL;AACH,GANM;ADiBA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,CAAf,EAA8B;AAC1B,ACVG,EAAA,ODUE,MCVF,CAAA,CDUH,GAAgB,CAAhB,ICVG,CAAA,IAAA,GAAP,YAAA;ADWI,ACVA,SDUK,ACVA,IAAI,CAAT,CDUA,GCVc,KAAK,UAAnB,EAA+B;ADWlC,ACVO,GDOD,QCPM,UAAL,CAAgB,CAAhB,EAAmB,KAAK,IAAxB;ACzBZ,AD0BS,IC1BT,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AFqCI,ACVC,EDUD,CCdO,QDcP,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AEpCJ,AFqCQ,IErCR,IFqCY,OAAO,GAAG,CErCtB,GAAA,IFqC8B,CAAC,EErC/B,CAAA,WFqCsB,CAAwB,KErC9C,AFqCmD,CErCnD,CFqCsB,CAAd;ACTG,EAAA,aAAA,CAAA,SAAA,CAAA,GAAA,GAAP,UAAc,CAAd,EAA2B;AC1B/B,AFoCQ,ACTA,IC3BR,IFoCY,ACTE,IAAI,CC3BlB,EFoCmB,ACTE,IAAb,CDSgB,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C;AEpCvD,AFqCY,ACTJ,SAAK,WAAL,CAAiB,YAAA;AC5BzB,AFsCY,ACTA,MAAA,IC7BZ,KD6BqB,CC7BrB,AD6BsB,EC7BtB,KD6BY,CAAkB,CAAC,CAAC,IAAI,CAAC,IAAN,CAAnB;AC7BmB,AFuCtB,ACTG,EC9BmB,ID8BnB,KC9BmB,CAAA,GD8BV,CAAC,IAAV,CC9BmB,EAAA,MAAA,CAAA;AD+BtB,KAHD;ACrBJ,AFkCI,ACTA,IDSA,ICTM,GCzBV,AFkCW,CAAC,KCTO,GCzBnB,ADyBsB,CCxBlB,AFiCA,GAAoB,ACTE,KDSG,QElC7B,ADyBsB,CACd,CCxBJ,ADwBK,CDQe,ACRd,EDQN,GCRW,EC1Bf,EAEuB,ADwBd,CADa,CAAlB;ACzBJ,AD6BI,QC7BJ,GD6BW,EC7BX,GAGI,ID0BA,EC1BA,CAAA,IAAA,CAAA,IAAA,EAAM,gBAAN,KAAuB,IAH3B;AFmCI,ACJH,GAZM,KDgBC,KAAK,YAAT,EAAuB;AEtCV,AFuCT,IEvCS,KAAA,CAAA,AFuCL,OAAO,CAAC,KEvCH,GAAuC,CFuC5C,GEvCgD,EFuC1B,EAA1B,EAA8B,SEvCsB,CAAA,aAAJ,CAA0B,CAA1B,CAAvC;AAOb,AFiCQ,ACHhB,IC9BQ,IFiCQ,CEjCJ,AD8BZ,CC9Ba,KFiCU,CAAC,MCHxB,KC9BQ,EFiCQ,CEjCiB,AFiCK,KAAtB,CAA4B,OAA5B,GEjCR,AFiC8C,MAAtC;AACH,AChDb,CAAA,EAAA,ID8CY,MAEO;AEjCX,AFkCQ,IElCR,IFkCQ,CElCJ,CAAC,KFkCU,CAAC,EElChB,CAAc,KAAI,CAAC,IFkCX,CAAsB,KAAtB,CAA4B,EElCpC,KFkCQ,GAAsC,SAAtC;AACH,AClDA,OAAA,CAAA,aAAA,G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","file":"SlideShow.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\nimport {Playground} from \"../Layers/Playground\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n    public readonly _source: UIEventSource<any>;\n    \n    private _hideIfEmpty = false;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        this._source = source;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if (source === undefined) {\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    private _onClick: () => void;\n\n    public onClick(f: (() => void)) {\n        this._onClick = f;\n        this.Update();\n    }\n\n    Update(): void {\n        let element = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n\n        element.innerHTML = this.InnerRender();\n        if (this._hideIfEmpty) {\n            if (element.innerHTML === \"\") {\n                element.parentElement.style.display = \"none\";\n            } else {\n                element.parentElement.style.display = undefined;\n            }\n        }\n\n        if (this._onClick !== undefined) {\n            console.log(\"Registering\")\n            const self = this;\n            element.onclick = () => {\n                console.log(\"Clicked!\")\n                self._onClick();\n            }\n            element.style.cursor = \"pointer\";\n        }\n\n        this.InnerUpdate(element);\n    }\n    \n    HideOnEmpty(hide : boolean){\n        this._hideIfEmpty = hide;\n        this.Update();\n        return this;\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    InnerUpdate(htmlElement : HTMLElement){}\n\n    Render(): string {\n        return \"<span class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</span>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        if(element === null){\n            console.log(\"SEVERE: could not attach UIElement to \", divId);\n            return;\n        }\n        element.innerHTML = this.Render();\n        this.Update();\n        return this;\n    }\n\n    protected abstract InnerRender(): string;\n    public Activate(): void {};\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","export class UIEventSource<T>{\n    \n    public data : T;\n    private _callbacks = [];\n\n    constructor(data: T) {\n        this.data = data;\n    }\n\n\n    public addCallback(callback: ((latestData : T) => void)) {\n        this._callbacks.push(callback);\n        return this;\n    }\n\n    public setData(t: T): void {\n        if (this.data === t) {\n            return;\n        }\n        this.data = t;\n        this.ping();\n    }\n\n    public ping(): void {\n        for (let i in this._callbacks) {\n            this._callbacks[i](this.data);\n        }\n    }\n\n    public map<J>(f: ((T) => J)): UIEventSource<J> {\n        const self = this;\n        this.addCallback(function () {\n            newSource.setData(f(self.data));\n            newSource.ping();\n        });\n        const newSource = new UIEventSource<J>(\n            f(this.data)\n        );\n\n        return newSource;\n\n    }\n\n\n}","import {UIElement} from \"./UIElement\";\nimport {UIEventSource} from \"./UIEventSource\";\n\nexport class SlideShow extends UIElement {\n\n    private readonly _embeddedElements: UIEventSource<UIElement[]>\n\n    private readonly _currentSlide: UIEventSource<number> = new UIEventSource<number>(0);\n    private readonly _noimages: UIElement;\n\n    constructor(\n        embeddedElements: UIEventSource<UIElement[]>,\n        noImages: UIElement) {\n        super(embeddedElements);\n        this._embeddedElements = embeddedElements;\n        this.ListenTo(this._currentSlide);\n        this._noimages = noImages;\n    }\n\n    protected InnerRender(): string {\n        if (this._embeddedElements.data.length == 0) {\n            return this._noimages.Render();\n        }\n\n        if (this._embeddedElements.data.length == 1) {\n            return \"<div class='image-slideshow'><div class='slides'><div class='slide'>\" +\n                this._embeddedElements.data[0].Render() +\n                \"</div></div></div>\";\n        }\n\n        const prevBtn = \"<div class='prev-button' id='prevbtn-\"+this.id+\"'></div>\"\n        const nextBtn = \"<div class='next-button' id='nextbtn-\"+this.id+\"'></div>\"\n\n        let slides = \"\"\n        for (let i = 0; i < this._embeddedElements.data.length; i++) {\n            let embeddedElement = this._embeddedElements.data[i];\n            let state = \"hidden\"\n            if (this._currentSlide.data === i) {\n                state = \"active-slide\";\n            }\n            slides += \"      <div class=\\\"slide \" + state + \"\\\">\" + embeddedElement.Render() + \"</div>\\n\";\n        }\n        return \"<div class='image-slideshow'>\"\n            + prevBtn\n            + \"<div class='slides'>\" + slides + \"</div>\"\n            + nextBtn\n            + \"</div>\";\n    }\n\n    public MoveTo(index: number) {\n        if (index < 0) {\n            index = this._embeddedElements.data.length - 1;\n        }\n        index = index % this._embeddedElements.data.length;\n        this._currentSlide.setData(index);\n    }\n\n    InnerUpdate(htmlElement) {\n        const nextButton = document.getElementById(\"nextbtn-\" + this.id);\n        if (nextButton === undefined || nextButton === null) {\n            return;\n        }\n\n        const prevButton = document.getElementById(\"prevbtn-\" + this.id);\n        const self = this;\n        nextButton.onclick = () => {\n            const current = self._currentSlide.data;\n            self.MoveTo(current + 1);\n        }\n        prevButton.onclick = () => {\n            const current = self._currentSlide.data;\n            self.MoveTo(current - 1);\n        }\n\n    }\n\n    Activate() {\n        for (const embeddedElement of this._embeddedElements.data) {\n            embeddedElement.Activate();\n        }\n    }\n\n}"]}