{"version":3,"sources":["UI/UIElement.ts","UI/UIEventSource.ts","UI/SlideShow.ts"],"names":[],"mappings":";;;;;;;AAGA,ACHA,IDGA,ACHA,SDGA,ICHA;ADGA,ACHA;ADGA,ACHA,YDGA,ACHA;ADYI,ACPA,WDOA,ACPA,SDOA,CAAsB,GCPtB,CAAY,EDOZ,EAAgD,ACPhD,EAAmB;ADKX,ACPA,SDOA,ACPA,UAAA,EDOA,CCPa,EDOE,ACPf,KDOA;AAGJ,ACPA,SDOK,ACPA,EDOL,ECPA,CDOU,ECPE,IAAZ,UDO0B,SAAS,CAAC,MAApC;AACA,ACPH,SDOQ,OAAL,GAAe,MAAf;AACA,IAAA,SAAS,CAAC,MAAV;AACA,ACNG,EAAA,ODME,MCNF,CAAA,CDMH,CAAc,MAAd,CCNG,CAAA,WAAA,GAAP,UAAmB,QAAnB,EAAuD;ADOtD,ACNG,SAAK,UAAL,CAAgB,IAAhB,CAAqB,QAArB;;ADSM,ACRN,EDQM,SAAA,ACRC,CDQD,GCRN,MDQM,CAAA,QAAA,GAAV,UAAmB,MAAnB,EAA6C;AACzC,ACRH,GAHM,KDWC,MAAM,KAAK,SAAf,EAA0B;AACtB;AACH,ACRE,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,CAAf,EAAmB;AACf,QAAI,KAAK,IAAL,KAAc,CAAlB,EAAqB;ADQrB,ACPI,QDOE,IAAI,GAAG,IAAb;AACA,ACPC,IDOD,MAAM,CAAC,WAAP,CAAmB,YAAA;AACf,MAAA,IAAI,CAAC,MAAL;AACH,ACRD,KDMA,ICNK,IAAL,GAAY,CAAZ;ADSH,ACRG,GDAM,MCAD,IAAL;AACH,GANM;ADiBA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,CAAf,EAA8B;AAC1B,ACVG,EAAA,ODUE,MCVF,CAAA,CDUH,GAAgB,CAAhB,ICVG,CAAA,IAAA,GAAP,YAAA;ADWI,ACVA,SDUK,ACVkB,IAAA,EDUvB,ACVuB,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,UAA5B,EAAuB,EAAA,GAAA,EAAA,CAAA,MAAvB,EAAuB,EAAA,EAAvB,EAAwC;ADWxC,ACXK,UAAM,CDWJ,IAAP,GCXmB,GAAA,EAAA,CAAA,EAAA,CAAd;ACxBb,AFoCK,ACXO,GDOD,CEhCX,EDyBY,QAAQ,CCzBpB,ADyBqB,GCzBrB,EDyB0B,IAAN,CCzBpB,ADyBY,CCzBZ,aAAA,CAAA;AD0BS;ACzBT,AFqCI,ACXC,EDWD,CCfO,CCtBX,OFqCI,CAAA,OErCJ,EFqCI,CErCJ,AFqCI,MAAA,CErCJ,CAAA,CFqCI,YAAA,IErCJ,CAAA;AFsCQ,QAAI,OAAO,GAAG,QAAQ,CAAC,cAAT,CAAwB,KAAK,EAA7B,CAAd;AEpCR,AD0BW,EAAA,EC1BX,SAAA,ED0BW,CAAA,SAAA,CAAA,GAAA,GAAP,UAAc,CAAd,EAA2B;AC1B/B,AFqCQ,ACVA,QDUI,ACVE,IAAI,GDUC,ACVE,IAAb,CDUgB,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C;AErCvD,AFsCY,ACVJ,SAAK,CC5Bb,MAAA,EAAA,ED4BQ,CAAiB,YAAA;AC5BM,AFuCnB,ACVA,EC7BmB,ID6BnB,KC7BmB,CAAA,GD6BV,CAAC,KC7BS,EAAA,AD6BnB,CAAkB,CAAC,CAAC,GC7BD,CAAA,AD6BK,CAAC,IAAN,CAAnB;ADWH,ACVG,MAAA,SAAS,CAAC,IAAV;ACvBR,ADwBK,KAHD,MCrBJ,SAAA,CACI,gBADJ,EAEI,QAFJ,EAEuB;AAFvB,AFmCI,ACVA,IDUA,IEnCJ,ADyBU,GDUC,CAAC,CEnCZ,GAGI,CDsBe,GAAG,CDUlB,CEhCA,CAAA,CFgCoB,ACVE,GCtBtB,CAAA,CFgCyB,GEhCzB,EAAM,GDsBY,CACd,CAAC,CDSe,ACTd,EDSN,GCTW,IAAN,CCvBL,ADsBkB,CAAlB,ICtBuB,IAH3B;AD6BI,WAAO,SAAP;AChCa,AFuCb,ACLH,GAZM,CCtBU,IFuCT,CEvCS,CAAA,GFuCJ,UEvCI,EFuCb,CEvCoD,CFuC7B,GEvCiC,eAAA,CAAA,aAAJ,CAA0B,CAA1B,CAAvC;AAOb,AFiCI,IEjCJ,KAAI,CAAC,AFiCG,OAAO,CAAC,SEjChB,AFiCQ,GEjCiB,EFiCK,EAA1B,EAA8B,UEjClC;AFkCQ,ACJhB,QDIgB,CCJhB,MDIuB,CAAC,MCJxB,ODIgB,CAAsB,KAAtB,CAA4B,OAA5B,GAAsC,MAAtC;AEjCR,AFkCK,ACjDb,CAAA,EAAA,CCeQ,GFgCI,EEhCA,CAAC,GFkCM,KElCX,CAAc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","file":"SlideShow.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\nimport {Playground} from \"../Layers/Playground\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n    public readonly _source: UIEventSource<any>;\n    \n    private _hideIfEmpty = false;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        this._source = source;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if (source === undefined) {\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    private _onClick: () => void;\n\n    public onClick(f: (() => void)) {\n        this._onClick = f;\n        this.Update();\n        return this;\n    }\n\n    Update(): void {\n        let element = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n\n        element.innerHTML = this.InnerRender();\n        if (this._hideIfEmpty) {\n            if (element.innerHTML === \"\") {\n                element.parentElement.style.display = \"none\";\n            } else {\n                element.parentElement.style.display = undefined;\n            }\n        }\n\n        if (this._onClick !== undefined) {\n            const self = this;\n            element.onclick = () => {\n                self._onClick();\n            }\n            element.style.pointerEvents = \"all\";\n            element.style.cursor = \"pointer\";\n        }\n\n        this.InnerUpdate(element);\n    }\n    \n    HideOnEmpty(hide : boolean){\n        this._hideIfEmpty = hide;\n        this.Update();\n        return this;\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    InnerUpdate(htmlElement : HTMLElement){}\n\n    Render(): string {\n        return \"<span class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</span>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        if(element === null){\n            console.log(\"SEVERE: could not attach UIElement to \", divId);\n            return;\n        }\n        element.innerHTML = this.Render();\n        this.Update();\n        return this;\n    }\n\n    protected abstract InnerRender(): string;\n    public Activate(): void {};\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","export class UIEventSource<T>{\n    \n    public data : T;\n    private _callbacks = [];\n\n    constructor(data: T) {\n        this.data = data;\n    }\n\n\n    public addCallback(callback: ((latestData : T) => void)) {\n        this._callbacks.push(callback);\n        return this;\n    }\n\n    public setData(t: T): void {\n        if (this.data === t) {\n            return;\n        }\n        this.data = t;\n        this.ping();\n    }\n\n    public ping(): void {\n        for (const callback of this._callbacks) {\n            callback(this.data);\n        }\n    }\n\n    public map<J>(f: ((T) => J)): UIEventSource<J> {\n        const self = this;\n        this.addCallback(function () {\n            newSource.setData(f(self.data));\n            newSource.ping();\n        });\n        const newSource = new UIEventSource<J>(\n            f(this.data)\n        );\n\n        return newSource;\n\n    }\n\n\n}","import {UIElement} from \"./UIElement\";\nimport {UIEventSource} from \"./UIEventSource\";\n\nexport class SlideShow extends UIElement {\n\n    private readonly _embeddedElements: UIEventSource<UIElement[]>\n\n    private readonly _currentSlide: UIEventSource<number> = new UIEventSource<number>(0);\n    private readonly _noimages: UIElement;\n\n    constructor(\n        embeddedElements: UIEventSource<UIElement[]>,\n        noImages: UIElement) {\n        super(embeddedElements);\n        this._embeddedElements = embeddedElements;\n        this.ListenTo(this._currentSlide);\n        this._noimages = noImages;\n    }\n\n    protected InnerRender(): string {\n        if (this._embeddedElements.data.length == 0) {\n            return this._noimages.Render();\n        }\n\n        if (this._embeddedElements.data.length == 1) {\n            return \"<div class='image-slideshow'><div class='slides'><div class='slide'>\" +\n                this._embeddedElements.data[0].Render() +\n                \"</div></div></div>\";\n        }\n\n        const prevBtn = \"<div class='prev-button' id='prevbtn-\"+this.id+\"'></div>\"\n        const nextBtn = \"<div class='next-button' id='nextbtn-\"+this.id+\"'></div>\"\n\n        let slides = \"\"\n        for (let i = 0; i < this._embeddedElements.data.length; i++) {\n            let embeddedElement = this._embeddedElements.data[i];\n            let state = \"hidden\"\n            if (this._currentSlide.data === i) {\n                state = \"active-slide\";\n            }\n            slides += \"      <div class=\\\"slide \" + state + \"\\\">\" + embeddedElement.Render() + \"</div>\\n\";\n        }\n        return \"<div class='image-slideshow'>\"\n            + prevBtn\n            + \"<div class='slides'>\" + slides + \"</div>\"\n            + nextBtn\n            + \"</div>\";\n    }\n\n    public MoveTo(index: number) {\n        if (index < 0) {\n            index = this._embeddedElements.data.length - 1;\n        }\n        index = index % this._embeddedElements.data.length;\n        this._currentSlide.setData(index);\n    }\n\n    InnerUpdate(htmlElement) {\n        const nextButton = document.getElementById(\"nextbtn-\" + this.id);\n        if (nextButton === undefined || nextButton === null) {\n            return;\n        }\n\n        const prevButton = document.getElementById(\"prevbtn-\" + this.id);\n        const self = this;\n        nextButton.onclick = () => {\n            const current = self._currentSlide.data;\n            self.MoveTo(current + 1);\n        }\n        prevButton.onclick = () => {\n            const current = self._currentSlide.data;\n            self.MoveTo(current - 1);\n        }\n\n    }\n\n    Activate() {\n        for (const embeddedElement of this._embeddedElements.data) {\n            embeddedElement.Activate();\n        }\n    }\n\n}"]}