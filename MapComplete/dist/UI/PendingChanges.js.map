{"version":3,"sources":["UI/UIElement.ts","UI/PendingChanges.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAA,SAAA;AAAA;AAAA,YAAA;AAMI,WAAA,SAAA,CAAsB,MAAtB,EAAgD;AAC5C,SAAK,EAAL,GAAU,gBAAgB,SAAS,CAAC,MAApC;AACA,IAAA,SAAS,CAAC,MAAV;AACA,SAAK,QAAL,CAAc,MAAd;AACH;;AAGS,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,MAAnB,EAA6C;AACzC,QAAG,MAAM,KAAK,SAAd,EAAwB;AACpB;AACH;;AACD,QAAM,IAAI,GAAG,IAAb;AACA,IAAA,MAAM,CAAC,WAAP,CAAmB,YAAA;AACf,MAAA,IAAI,CAAC,MAAL;AACH,KAFD;AAGH,GARS;;AAUV,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,QAAI,OAAO,GAAI,QAAQ,CAAC,cAAT,CAAwB,KAAK,EAA7B,CAAf;;AACA,QAAI,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C;AAC3C;AACA;AC7BZ,AD8BS,IC9BT,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAIA,AD4BQ,IC5BR,AD4BQ,OAAO,CAAC,MC5BhB,GD4BQ,GAAoB,KAAK,WAAL,EAApB;AC5BR,AD6BQ,SAAK,WAAL,CAAiB,OAAjB;AC7BR,AD8BK,GATD,OCrBJ,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;ADmChC,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AC/BA,ADgCI,WChCJ,ADgCW,cChCX,CAAY,OAAZ,EAA8B,QDgCa,CChC3C,EAA8D,EDgCd,EAArC,GAA0C,IAA1C,GAAiD,KAAK,WAAL,EAAjD,GAAsE,QAA7E;AChCJ,ADiCC,GAFD,KC/BA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,KAAgB,IADpB;;AAEI,ADiCJ,EAAA,ECjCI,KAAI,CAAC,CDiCT,CAAA,KCjCI,GAAe,CDiCnB,CAAA,KCjCI,GDiCJ,GAAA,UAAS,KAAT,EAAsB;AC9BlB,AD+BA,IC/BA,ID+BI,KC/BK,CAAC,CD+BC,GAAG,OC/Bd,CAAsB,AD+BA,CAAC,WC/BD,GD+BR,CAAwB,KAAxB,CAAd;AC7BI,AD8BJ,IAAA,MC9BU,CD8BH,CAAC,QC9BY,CD8BpB,EC9BuB,CD8BH,GC9BO,CAAC,CD8BH,EC9BF,CAAS,CAAT,EAAY,AD8Bf,EAApB,IC9ByC,SAAS,CAAC,IAAhB,GAAuB,KAAnC,CAAnB;AAEA,AD6BP,GAHD,OC1BY,GAAG,GAAG,QAAQ,CAAC,cAAT,CAAwB,aAAxB,CAAV;;AACA,ADgCD,EAAA,QChCK,CDgCL,CAAA,CChCQ,KAAK,GDgCb,CAAA,KChCC,EAAuB,ADgCxB,GAAP,YAAA;AC/BY,ADgCR,WAAO,KAAK,WAAL,OAAuB,EAA9B;AC/BK,ADgCR,GAFM;;AC7BC,ADjBO,EAAA,QCiBD,CDjBC,CAAA,GCiBI,GAAG,ADjBP,GCiBU,ADjBO,CCiBN,ADjBX,KCiBP;AACA,ADgCZ,MChCY,GDgCZ,EChCiB,CAAC,KAAN,CDgCZ,EChC0B,UAAU,GAAG,GAA3B;AACA,ADrBZ,CAAA,EAAA,GCqBY,KAAK,CAAC,aAAD,CAAL,GAAwB,KAAM,UAAU,GAAG,CAApB,GAA0B,GAAjD;AAEH,KAZD;AAcA,ADzBc,ICyBd,GDzBc,CAAA,GCyBP,CAAC,KDzBM,GAAA,QCyBd,CAAyB,ADzBX,WCyBd,CAAqC,YAAA;AACjC,UAAM,CAAC,GAAG,OAAO,CAAC,eAAR,CAAwB,MAAlC;AACA,UAAM,IAAI,GAAG,QAAQ,CAAC,cAAT,CAAwB,cAAxB,CAAb;;AACA,UAAI,CAAC,IAAI,CAAT,EAAY;AACR,QAAA,IAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,GAArB;AACA,QAAA,IAAI,CAAC,SAAL,GAAiB,WAAjB;AACH,OAHD,MAGO;AACH,QAAA,IAAI,CAAC,SAAL,GAAiB,CAAC,GAAG,UAArB;AACA,QAAA,IAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,GAArB;AACH;;AAGD,UAAM,GAAG,GAAG,QAAQ,CAAC,cAAT,CAAwB,aAAxB,CAAZ;;AAEA,UAAI,GAAG,KAAK,IAAZ,EAAkB;AACd;AACH;;AAGD,UAAI,CAAC,IAAI,CAAT,EAAY;AACR,QAAA,GAAG,CAAC,KAAJ,CAAU,OAAV,GAAoB,GAApB;AACH,OAFD,MAEO;AACH,QAAA,GAAG,CAAC,KAAJ,CAAU,OAAV,GAAoB,KAApB;AACH;AAEJ,KAzBD;;AA0BH;;AAES,EAAA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACI,WAAO,oEACH,+BADJ;AAEH,GAHS;;AAKV,EAAA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,WAAZ,EAAoC,CACnC,CADD;;AAIJ,SAAA,cAAA;AA5DA,CAAA,CAAoC,WAAA,CAAA,SAApC,CAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","file":"PendingChanges.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if(source === undefined){\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    Update(): void {\n        let element  = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n        \n        element.innerHTML = this.InnerRender();\n        this.InnerUpdate(element);\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    abstract InnerUpdate(htmlElement : HTMLElement);\n\n    Render(): string {\n        return \"<div class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</div>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        element.innerHTML = this.Render();\n    }\n\n    protected abstract InnerRender(): string;\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","import {UIElement} from \"./UIElement\";\nimport {UIEventSource} from \"./UIEventSource\";\nimport {Changes} from \"../Logic/Changes\";\n\nexport class PendingChanges extends UIElement{\n\n    private readonly changes;\n\n    constructor(changes: Changes, countdown: UIEventSource<number>) {\n        super(undefined); // We do everything manually here!\n        this.changes = changes;\n\n\n        countdown.addCallback(function () {\n\n            const percentage = Math.max(0, 100 * countdown.data / 20000);\n\n            let bar = document.getElementById(\"pending-bar\");\n            if (bar === undefined) {\n                return;\n            }\n            const style = bar.style;\n            style.width = percentage + \"%\";\n            style[\"margin-left\"] = (50 - (percentage / 2)) + \"%\";\n\n        });\n\n        changes.pendingChangesES.addCallback(function () {\n            const c = changes._pendingChanges.length;\n            const text = document.getElementById(\"pending-text\");\n            if (c == 0) {\n                text.style.opacity = \"0\";\n                text.innerText = \"Saving...\";\n            } else {\n                text.innerText = c + \" pending\";\n                text.style.opacity = \"1\";\n            }\n\n\n            const bar = document.getElementById(\"pending-bar\");\n\n            if (bar === null) {\n                return;\n            }\n\n\n            if (c == 0) {\n                bar.style.opacity = \"0\";\n            } else {\n                bar.style.opacity = \"0.5\";\n            }\n\n        });\n    }\n    \n    protected InnerRender(): string {\n        return \"<div id='pending-bar' style='width:100%; margin-left:0%'></div>\" +\n            \"<div id='pending-text'></div>\";\n    }   \n    \n    InnerUpdate(htmlElement: HTMLElement) {\n    }\n\n\n}"]}