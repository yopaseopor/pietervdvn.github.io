{"version":3,"sources":["UI/UIElement.ts","UI/TagMapping.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAA,SAAA;AAAA;AAAA,YAAA;AAMI,WAAA,SAAA,CAAsB,MAAtB,EAAgD;AAC5C,SAAK,EAAL,GAAU,gBAAgB,SAAS,CAAC,MAApC;AACA,IAAA,SAAS,CAAC,MAAV;AACA,SAAK,QAAL,CAAc,MAAd;AACH;;AAGS,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,MAAnB,EAA6C;AACzC,QAAG,MAAM,KAAK,SAAd,EAAwB;AACpB;AACH;;AACD,QAAM,IAAI,GAAG,IAAb;AACA,IAAA,MAAM,CAAC,WAAP,CAAmB,YAAA;AACf,MAAA,IAAI,CAAC,MAAL;AACH,KAFD;AAGH,GARS;;AAUV,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,QAAI,OAAO,GAAI,QAAQ,CAAC,cAAT,CAAwB,KAAK,EAA7B,CAAf;;AACA,QAAI,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C;AAC3C;AACA;AC7BZ,AD8BS,IC9BT,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAIA,AD4BQ,IC5BR,AD4BQ,OAAO,CAAC,SC5BhB,AD4BQ,GAAoB,KAAK,WAAL,EAApB;AC5BR,AD6BQ,SAAK,WAAL,CAAiB,OAAjB;AC7BR,AD8BK,GATD,SCrBJ;AAMI,WAAA,iBAAA,CAAY,OAAZ,EAKC;AACG,ADuBJ,EAAA,OCvBS,EDuBT,CCvBI,ADuBJ,GCvBe,MDuBf,CCvBsB,ADuBtB,CCvBuB,GAAnB,EDuBJ,GAAA,YAAA;ACtBI,ADuBA,SCvBK,EDuBE,KCvBP,GAAe,OAAO,CAAC,OAAvB,SDuBuC,KAAK,EAArC,GAA0C,IAA1C,GAAiD,KAAK,WAAL,EAAjD,GAAsE,QAA7E;ACtBA,ADuBH,GAFD,MCrBS,QAAL,GAAgB,OAAO,CAAC,QAAxB;AACA,SAAK,OAAL,GAAe,OAAO,CAAC,OAAvB;AACH,ADuBD,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAsB;AAClB,QAAI,OAAO,GAAG,QAAQ,CAAC,cAAT,CAAwB,KAAxB,CAAd;ACtBR,ADuBQ,IAAA,KCvBR,EDuBe,CAAC,SAAR,GAAoB,ECvB5B,GDuBiC,MAAL,EAApB;ACzCR,AD0CK,CC1CL,EAAA,ADuCI;;ACvCS,AD8CF,EAAA,KC9CE,CAAA,GD8CF,CAAA,SAAA,CAAA,GC9CE,GAAA,CD8CF,GAAP,YAAA,CC9CS;AD+CL,WAAO,KAAK,WAAL,OAAuB,EAA9B;AC3BR,AD4BK,GAFM,CC1BX,UAAA;AAAA;AAAA,ADpBmB,EAAA,QCoBnB,CDpBmB,CAAA,ICoBnB,EAAA,ADpBmB,GAAiB,CAAjB;ACoBa,AD8BhC,EC9BgC,OD8BhC,EC9BgC,CAAA,MD8BhC,IC9BgC,EAAA,MAAA,CAAA;ADtBhC,CAAA,EAAA;AC2BI,WAAA,UAAA,CACI,OADJ,EAEI,IAFJ,EAE4B;AAF5B,AD3BkB,OAAA,CC2BlB,AD3BkB,KC2BlB,GAGI,CD9Bc,GAAA,EC8Bd,CAAA,IAAA,CAAA,CD9Bc,GC8Bd,EAAM,IAAN,KAAW,IAHf;;AAII,IAAA,KAAI,CAAC,IAAL,GAAY,IAAI,CAAC,IAAjB;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,OAAf;;AACH;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACI,QAAM,CAAC,GAAG,KAAK,OAAf;AACA,WAAO,KAAK,IAAL,CAAU,CAAC,CAAC,GAAZ,MAAqB,SAArB,IAAkC,CAAC,CAAC,OAAF,KAAc,SAAvD;AACH,GAHD;;AAKU,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AAEI,QAAM,CAAC,GAAG,KAAK,OAAf;AACA,QAAM,CAAC,GAAG,KAAK,IAAL,CAAU,CAAC,CAAC,GAAZ,CAAV;;AAEA,QAAI,CAAC,KAAK,SAAV,EAAqB;AACjB,UAAI,CAAC,CAAC,OAAF,KAAc,SAAlB,EAA6B;AACzB,eAAO,EAAP;AACH;;AACD,aAAO,CAAC,CAAC,OAAT;AACH;;AAED,QAAI,CAAC,CAAC,OAAF,KAAc,SAAlB,EAA6B;AAEzB,UAAM,MAAM,GAAG,CAAC,CAAC,OAAF,CAAU,CAAV,CAAf;;AACA,UAAI,MAAM,KAAK,SAAf,EAA0B;AACtB,eAAO,MAAP;AACH;AACJ;;AAED,QAAI,CAAC,CAAC,QAAF,KAAe,SAAnB,EAA8B;AAC1B,MAAA,OAAO,CAAC,GAAR,CAAY,2BAA2B,CAAC,CAAC,GAA7B,GAAmC,GAAnC,GAAyC,CAArD;AACA,aAAO,CAAP;AACH;;AAED,WAAO,CAAC,CAAC,QAAF,CAAW,OAAX,CAAmB,MAAM,CAAC,CAAC,GAAR,GAAc,GAAjC,EAAsC,CAAtC,CAAP;AACH,GA1BS;;AA2BV,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,WAAZ,EAAoC,CACnC,CADD;;AAGJ,SAAA,UAAA;AAhDA,CAAA,CAAgC,WAAA,CAAA,SAAhC,CAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA","file":"TagMapping.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if(source === undefined){\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    Update(): void {\n        let element  = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n        \n        element.innerHTML = this.InnerRender();\n        this.InnerUpdate(element);\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    abstract InnerUpdate(htmlElement : HTMLElement);\n\n    Render(): string {\n        return \"<div class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</div>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        element.innerHTML = this.Render();\n    }\n\n    protected abstract InnerRender(): string;\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","import {UIElement} from \"./UIElement\";\nimport {UIEventSource} from \"./UIEventSource\";\n\n\nexport class TagMappingOptions {\n    key: string;// The key to show\n    mapping?: any;// dictionary for specific values, the values are substituted \n    template?: string; // The template, where {key} will be substituted\n    missing?: string// What to show when the key is not there\n\n    constructor(options: {\n        key: string,\n        mapping?: any,\n        template?: string,\n        missing?: string\n    }) {\n        this.key = options.key;\n        this.mapping = options.mapping;\n        this.template = options.template;\n        this.missing = options.missing;\n    }\n\n}\n\nexport class TagMapping extends UIElement {\n\n    private readonly tags;\n    private readonly options: TagMappingOptions;\n\n    constructor(\n        options: TagMappingOptions,\n        tags: UIEventSource<any>) {\n        super(tags);\n        this.tags = tags.data;\n        this.options = options;\n    }\n\n    IsEmpty(): boolean {\n        const o = this.options;\n        return this.tags[o.key] === undefined && o.missing === undefined;\n    }\n\n    protected InnerRender(): string {\n\n        const o = this.options;\n        const v = this.tags[o.key];\n\n        if (v === undefined) {\n            if (o.missing === undefined) {\n                return \"\";\n            }\n            return o.missing;\n        }\n\n        if (o.mapping !== undefined) {\n\n            const mapped = o.mapping[v];\n            if (mapped !== undefined) {\n                return mapped;\n            }\n        }\n\n        if (o.template === undefined) {\n            console.log(\"Warning: no match for \" + o.key + \"=\" + v);\n            return v;\n        }\n\n        return o.template.replace(\"{\" + o.key + \"}\", v);\n    }\n    InnerUpdate(htmlElement: HTMLElement) {\n    }\n\n}"]}