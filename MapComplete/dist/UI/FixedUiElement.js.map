{"version":3,"sources":["UI/UIElement.ts","UI/FixedUiElement.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAA,SAAA;AAAA;AAAA,YAAA;AAMI,WAAA,SAAA,CAAsB,MAAtB,EAAgD;AAC5C,SAAK,EAAL,GAAU,gBAAgB,SAAS,CAAC,MAApC;AACA,IAAA,SAAS,CAAC,MAAV;AACA,SAAK,QAAL,CAAc,MAAd;AACH;;AAGS,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,MAAnB,EAA6C;AACzC,QAAG,MAAM,KAAK,SAAd,EAAwB;AACpB;AACH;;AACD,QAAM,IAAI,GAAG,IAAb;AACA,IAAA,MAAM,CAAC,WAAP,CAAmB,YAAA;AACf,MAAA,IAAI,CAAC,MAAL;AACH,KAFD;AAGH,GARS;;AAUV,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,QAAI,OAAO,GAAI,QAAQ,CAAC,cAAT,CAAwB,KAAK,EAA7B,CAAf;;AACA,QAAI,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C;AAC3C;AACA;AC7BZ,AD8BS,IC9BT,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,AD8BQ,IC9BR,AD8BQ,OAAO,CAAC,MC9BhB,GD8BQ,GAAoB,KAAK,WAAL,EAApB;AC9BR,AD+BQ,SAAK,WAAL,CAAiB,OAAjB;AC/BR,ADgCK,GATD,OCvBJ,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;ADqChC,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AClCA,ADmCI,WCnCJ,ADmCW,cCnCX,CAAY,IAAZ,EAAwB,WDmCmB,KAAK,EAArC,GAA0C,IAA1C,GAAiD,KAAK,WAAL,EAAjD,GAAsE,QAA7E;ACnCJ,ADoCC,GAFD,KClCA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,KAAgB,IADpB;;AAEI,ADoCJ,EAAA,ECpCI,KAAI,CAAC,CDoCT,CAAA,GCpCI,GAAa,GDoCjB,CCpCI,ADoCJ,QAAA,GAAA,UAAS,KAAT,EAAsB;AAClB,QAAI,OAAO,GAAG,QAAQ,CAAC,cAAT,CAAwB,KAAxB,CAAd;ACpCH,ADqCG,IAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,MAAL,EAApB;AACH,GAHD;ACjCU,EAAA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACI,ADuCG,EAAA,SCvCI,ADuCJ,CAAA,ICvCS,KAAZ,ADuCG,CAAA,OAAA,GAAP,YAAA;ACtCC,ADuCG,GCzCM,QDyCC,KAAK,WAAL,OAAuB,EAA9B;AACH,GAFM;ACnCX,SAAA,cAAA;AAbA,ADEmB,CCFnB,CAAoC,ADEjB,SAAA,CAAA,CCFiB,CAAA,IDEjB,GAAiB,CAAjB,CCFnB,CAAA;ADoDA,SAAA,SAAA;ACpDa,ADAb,CAAA,EAAA,ICAa,CAAA,cAAA,GAAA,cAAA;;ADAS,OAAA,CAAA,SAAA,GAAA,SAAA","file":"FixedUiElement.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if(source === undefined){\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    Update(): void {\n        let element  = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n        \n        element.innerHTML = this.InnerRender();\n        this.InnerUpdate(element);\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    abstract InnerUpdate(htmlElement : HTMLElement);\n\n    Render(): string {\n        return \"<div class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</div>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        element.innerHTML = this.Render();\n    }\n\n    protected abstract InnerRender(): string;\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","import {UIElement} from \"./UIElement\";\n\nexport class FixedUiElement extends UIElement {\n    private _html: string;\n\n    constructor(html: string) {\n        super(undefined);\n        this._html = html;\n    }\n\n    protected InnerRender(): string {\n        return this._html;\n    }\n\n\n}"]}