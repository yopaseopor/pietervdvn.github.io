{"version":3,"sources":["UI/UIElement.ts","UI/LoginDependendtMessage.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAA,SAAA;AAAA;AAAA,YAAA;AAMI,WAAA,SAAA,CAAsB,MAAtB,EAAgD;AAC5C,SAAK,EAAL,GAAU,gBAAgB,SAAS,CAAC,MAApC;AACA,IAAA,SAAS,CAAC,MAAV;AACA,SAAK,QAAL,CAAc,MAAd;AACH;;AAGS,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,MAAnB,EAA6C;AACzC,QAAG,MAAM,KAAK,SAAd,EAAwB;AACpB;AACH;;AACD,QAAM,IAAI,GAAG,IAAb;AACA,IAAA,MAAM,CAAC,WAAP,CAAmB,YAAA;AACf,MAAA,IAAI,CAAC,MAAL;AACH,KAFD;AAGH,GARS;;AAUV,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,QAAI,OAAO,GAAI,QAAQ,CAAC,cAAT,CAAwB,KAAK,EAA7B,CAAf;;AACA,QAAI,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C;AAC3C;AACA;AC7BZ,AD8BS,IC9BT,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAIA,AD4BQ,IC5BR,AD4BQ,OAAO,CAAC,SAAR,GAAoB,EC5B5B,GD4BiC,WAAL,EAApB;AC5BR,AD6BQ,SAAK,WAAL,CAAiB,OAAjB;AC7BR,AD8BK,GATD,OCrBJ,MAAA,EAAA;AAA4C,EAAA,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA;ADmCxC,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AC9BA,AD+BI,WC/BJ,AD+BW,sBC/BX,CAAY,SAAZ,AD+B2C,EC9B/B,GD8BoC,EAArC,GAA0C,EC/BrD,EAEY,AD6BD,GAAiD,KC/B5D,AD+BiE,EC7BrC,SD6BgC,EAAjD,GAAsE,QAA7E;AC/BJ,ADgCC,GAFD,KC9BA,KAAA,GAGI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,KAAgB,IAHpB;;AAII,AD8BJ,EAAA,EC9BI,KAAI,CAAC,CD8BT,CAAA,SAAA,CC9BI,AD8BJ,GC9BwB,KD8BxB,GAAA,CC9BiC,CAAC,IAA9B,ID8BK,KAAT,EAAsB;AC7BlB,AD8BA,IC9BA,ID8BI,CC9BA,CAAC,KD8BM,GAAG,GC9Bd,GAAmB,ED8BG,CAAC,OC9BvB,OD8Bc,CAAwB,KAAxB,CAAd;AC7BA,AD8BA,IC9BA,AD8BA,KC9BI,CAAC,CD8BE,CAAC,OC9BR,ED8BA,CC9BiB,ED8BG,KAAK,CC9BzB,KD8BoB,EAApB;AACH,GAHD;AC3BC;ADkCM,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AChCU,ADiCN,ECjCM,SDiCC,KAAK,QCjCN,CAAA,EDiCC,OCjCD,ADiCwB,CCjCxB,CDiCN,UCjCM,GAAV,YAAA;AACI,ADiCH,GAFM,KC/BC,KAAK,YAAL,CAAkB,QAAtB,EAAgC;AAC5B,aAAO,KAAK,SAAZ;AACH,ADjBU,EAAA,GCeX,MAEO,ADjBI,CAAA,MAAA,GAAiB,CAAjB;ACkBP,ADgCZ,SAAA,IChCmB,KAAK,ADgCxB,WChCY;AACH,ADrBT,CAAA,EAAA;ACsBK,GANS;ADhBQ,OAAA,CAAA,SAAA,GAAA,SAAA;ACwBlB,EAAA,sBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,WAAZ,EAAoC,CAChC;AACH,GAFD;;AAIJ,SAAA,sBAAA;AA1BA,CAAA,CAA4C,WAAA,CAAA,SAA5C,CAAA;;AAAa,OAAA,CAAA,sBAAA,GAAA,sBAAA","file":"LoginDependendtMessage.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if(source === undefined){\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    Update(): void {\n        let element  = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n        \n        element.innerHTML = this.InnerRender();\n        this.InnerUpdate(element);\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    abstract InnerUpdate(htmlElement : HTMLElement);\n\n    Render(): string {\n        return \"<div class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</div>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        element.innerHTML = this.Render();\n    }\n\n    protected abstract InnerRender(): string;\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","import {UIElement} from \"./UIElement\";\nimport {UserDetails} from \"../Logic/OsmConnection\";\nimport {UIEventSource} from \"./UIEventSource\";\n\nexport class LoginDependendtMessage extends UIElement {\n    private _noLoginMsg: string;\n    private _loginMsg: string;\n    private _userDetails: UserDetails;\n\n    constructor(loginData: UIEventSource<UserDetails>,\n                noLoginMsg: string,\n                loginMsg: string) {\n        super(loginData);\n        this._userDetails = loginData.data;\n        this._noLoginMsg = noLoginMsg;\n        this._loginMsg = loginMsg;\n    }\n\n    protected InnerRender(): string {\n        if (this._userDetails.loggedIn) {\n            return this._loginMsg;\n        } else {\n            return this._noLoginMsg;\n        }\n    }\n\n    InnerUpdate(htmlElement: HTMLElement) {\n        // pass\n    }\n\n}"]}