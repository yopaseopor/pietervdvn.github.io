{"version":3,"sources":["UI/UIElement.ts","Logic/Question.ts"],"names":[],"mappings":"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","file":"Question.js","sourceRoot":"..","sourcesContent":["import {UIEventSource} from \"./UIEventSource\";\n\nexport abstract class UIElement {\n\n    private static nextId: number = 0;\n\n    public readonly id: string;\n\n    protected constructor(source: UIEventSource<any>) {\n        this.id = \"ui-element-\" + UIElement.nextId;\n        UIElement.nextId++;\n        this.ListenTo(source);\n    }\n\n\n    protected ListenTo(source: UIEventSource<any>) {\n        if(source === undefined){\n            return;\n        }\n        const self = this;\n        source.addCallback(() => {\n            self.Update();\n        })\n    }\n\n    Update(): void {\n        let element  = document.getElementById(this.id);\n        if (element === null || element === undefined) {\n            // The element is not painted\n            return;\n        }\n        \n        element.innerHTML = this.InnerRender();\n        this.InnerUpdate(element);\n    }\n    \n    // Called after the HTML has been replaced. Can be used for css tricks\n    abstract InnerUpdate(htmlElement : HTMLElement);\n\n    Render(): string {\n        return \"<div class='uielement' id='\" + this.id + \"'>\" + this.InnerRender() + \"</div>\"\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId);\n        element.innerHTML = this.Render();\n    }\n\n    protected abstract InnerRender(): string;\n\n    public IsEmpty(): boolean {\n        return this.InnerRender() === \"\";\n    }\n\n}","import {Changes} from \"./Changes\";\nimport {UIElement} from \"../UI/UIElement\";\nimport {UIEventSource} from \"../UI/UIEventSource\";\n\nexport class QuestionUI extends UIElement {\n    private readonly _q: Question;\n    private readonly _tags: UIEventSource<any>;\n    /**\n     * The ID of the calling question - used to trigger it's onsave\n     */\n    private readonly _qid;\n\n    constructor(q: Question, qid: number, tags: UIEventSource<any>) {\n        super(tags);\n        this._q = q;\n        this._tags = tags;\n        this._qid = qid;\n    }\n\n\n    private RenderRadio() {\n        let radios = \"\";\n        let c = 0;\n        for (let answer of this._q.question.answers) {\n            const human = answer.text;\n            const ansId = \"q\" + this._qid + \"-answer\" + c;\n            radios +=\n                \"<input type='radio' name='q\" + this._qid + \"' id='\" + ansId + \"' value='\" + c + \"' />\" +\n                \"<label for='\" + ansId + \"'>\" + human + \"</label>\" +\n                \"<br />\";\n            c++;\n        }\n        return radios;\n    }\n\n    private RenderRadioText() {\n        let radios = \"\";\n        let c = 0;\n        for (let answer of this._q.question.answers) {\n            const human = answer.text;\n            const ansId = \"q\" + this._qid + \"-answer\" + c;\n            radios +=\n                \"<input type='radio' name='q\" + this._qid + \"' id='\" + ansId + \"' value='\" + c + \"' />\" +\n                \"<label for='\" + ansId + \"'>\" + human + \"</label>\" +\n                \"<br />\";\n            c++;\n        }\n        const ansId = \"q\" + this._qid + \"-answer\" + c;\n\n        radios +=\n            \"<input type='radio' name='q\" + this._qid + \"' id='\" + ansId + \"' value='\" + c + \"' />\" +\n            \"<label for='\" + ansId + \"'>Andere: <input type='text' id='q-\" + this._qid + \"-textbox' onclick='checkRadioButton(\\\"\" + ansId + \"\\\")'/></label>\" +\n            \"<br />\";\n\n        return radios;\n    }\n\n\n    InnerRender(): string {\n\n        if (!this._q.Applicable(this._tags.data)) {\n            return \"\";\n        }\n\n\n        const q = this._q.question;\n\n\n        let answers = \"\";\n        if (q.type == \"radio\") {\n            answers += this.RenderRadio();\n        } else if (q.type == \"text\") {\n            answers += \"<input type='text' id='q-\" + this._qid + \"-textbox'/><br/>\"\n        } else if (q.type == \"radio+text\") {\n            answers += this.RenderRadioText();\n        } else {\n            alert(\"PLZ RENDER TYPE \" + q.type);\n        }\n\n\n        const embeddedScriptSave = 'questionAnswered(' + this._qid + ', \"' + this._tags.data.id + '\", false )';\n        const embeddedScriptSkip = 'questionAnswered(' + this._qid + ', \"' + this._tags.data.id + '\", true )';\n        const saveButton = \"<input class='save-button' type='button' onclick='\" + embeddedScriptSave + \"' value='Opslaan' />\";\n        const skip = \"<input class='skip-button' type='button' onclick='\" + embeddedScriptSkip + \"' value='Ik ben het niet zeker' />\";\n        return q.question + \"<br/>  \" + answers + saveButton + skip;\n    }\n\n    InnerUpdate(htmlElement: HTMLElement) {\n    }\n}\n\n\nexport class QuestionDefinition {\n\n\n    static textQuestion(\n        question: string,\n        key: string,\n        severity: number\n    ): QuestionDefinition {\n        const q = new QuestionDefinition(question);\n        q.type = 'text';\n        q.key = key;\n        q.severity = severity;\n        q.addUnrequiredTag(key, '*');\n        return q;\n    }\n\n    static radioQuestionSimple(\n        question: string,\n        severity: number,\n        key: string,\n        answers: { text: string, value: string }[]) {\n\n\n        const answers0: {\n            text: string,\n            tags: { k: string, v: string }[],\n        }[] = [];\n        for (const i in answers) {\n            const answer = answers[i];\n            answers0.push({text: answer.text, tags: [{k: key, v: answer.value}]})\n        }\n\n        var q = this.radioQuestion(question, severity, answers0);\n        q.key = key;\n        q.addUnrequiredTag(key, '*');\n        return q;\n    }\n\n    static radioAndTextQuestion(\n        question: string,\n        severity: number,\n        key: string,\n        answers: { text: string, value: string }[]) {\n\n        const q = this.radioQuestionSimple(question, severity, key, answers);\n        q.type = 'radio+text';\n        return q;\n\n    }\n\n    static radioQuestion(\n        question: string,\n        severity: number,\n        answers:\n            {\n                text: string,\n                tags: { k: string, v: string }[],\n            }[]\n    ): QuestionDefinition {\n\n\n        const q = new QuestionDefinition(question);\n        q.severity = severity;\n        q.type = 'radio';\n        q.answers = answers;\n        for (const i in answers) {\n            const answer = answers[i];\n            for (const j in answer.tags) {\n                const tag = answer.tags[j];\n                q.addUnrequiredTag(tag.k, tag.v);\n            }\n        }\n\n        return q;\n    }\n\n\n    private constructor(question: string) {\n        this.question = question;\n    }\n\n    /**\n     * Question for humans\n     */\n    public question: string;\n\n    /**\n     * 'type' indicates how the answers are rendered and must be one of:\n     * 'text' for a free to fill text field\n     * 'radio' for radiobuttons\n     * 'radio+text' for radiobuttons and a freefill text field\n     * 'dropdown' for a dropdown menu\n     * 'number' for a number field\n     *\n     * If 'text' or 'number' is specified, 'key' is used as tag for the answer.\n     * If 'radio' or 'dropdown' is specified, the answers are used from 'tags'\n     *\n     */\n    public type: string = 'radio';\n    /**\n     * Only used for 'text' or 'number' questions\n     */\n    public key: string = null;\n\n    public answers: {\n        text: string,\n        tags: { k: string, v: string }[]\n    }[];\n\n    /**\n     * Indicates that the element must have _all_ the tags defined below\n     * Dictionary 'key' => [values]; empty list is wildcard\n     */\n    private mustHaveAllTags = [];\n\n    /**\n     * Indicates that the element must _not_ have any of the tags defined below.\n     * Dictionary 'key' => [values]\n     */\n    private mustNotHaveTags = [];\n\n    /**\n     * Severity: how important the question is\n     * The higher, the sooner it'll be shown\n     */\n    public severity: number = 0;\n\n    addRequiredTag(key: string, value: string) {\n        if (this.mustHaveAllTags[key] === undefined) {\n            this.mustHaveAllTags[key] = [value];\n        } else {\n            this.mustHaveAllTags[key].push(value);\n        }\n        return this;\n    }\n\n    addUnrequiredTag(key: string, value: string) {\n        let valueList = this.mustNotHaveTags[key];\n\n        if (valueList === undefined) {\n            valueList = [value];\n            this.mustNotHaveTags[key] = valueList;\n        } else {\n            if (valueList === []) {\n                return;\n            }\n            valueList.push(value);\n        }\n\n        if (value === '*') {\n            this.mustNotHaveTags[key] = [];\n        }\n        return this;\n    }\n\n    private addAnwser(anwser: string, key: string, value: string) {\n        if (this.answers === undefined) {\n            this.answers = [{text: anwser, tags: [{k: key, v: value}]}];\n        } else {\n            this.answers.push({text: anwser, tags: [{k: key, v: value}]});\n        }\n        this.addUnrequiredTag(key, value);\n    }\n\n    public isApplicable(alreadyExistingTags): boolean {\n        for (let k in this.mustHaveAllTags) {\n\n            var actual = alreadyExistingTags[k];\n            if (actual === undefined) {\n                return false;\n            }\n\n            let possibleVals = this.mustHaveAllTags[k];\n            if (possibleVals.length == 0) {\n                // Wildcard\n                continue;\n            }\n\n            let index = possibleVals.indexOf(actual);\n            if (index < 0) {\n                return false\n            }\n        }\n\n        for (var k in this.mustNotHaveTags) {\n            var actual = alreadyExistingTags[k];\n            if (actual === undefined) {\n                continue;\n            }\n            let impossibleVals = this.mustNotHaveTags[k];\n            if (impossibleVals.length == 0) {\n                // Wildcard\n                return false;\n            }\n\n            let index = impossibleVals.indexOf(actual);\n            if (index >= 0) {\n                return false\n            }\n        }\n\n        return true;\n\n    }\n}\n\n\nexport class Question {\n\n\n    // All the questions are stored in here, to be able to retrieve them globaly. This is a workaround, see below\n    static questions = Question.InitCallbackFunction();\n\n    static InitCallbackFunction(): Question[] {\n\n        // This needs some explanation, as it is a workaround\n        Question.questions = [];\n        // The html in a popup is only created when the user actually clicks to open it\n        // This means that we can not bind code to an HTML-element (as it doesn't exist yet)\n        // We work around this, by letting the 'save' button just call the function 'questionAnswered' with the ID of the question\n        // THis defines and registers this global function\n\n\n        /**\n         * Calls back to the question with either the answer or 'skip'\n         * @param questionId\n         * @param elementId\n         */\n        function questionAnswered(questionId, elementId, dontKnow) {\n            if (dontKnow) {\n                Question.questions[questionId].Skip(elementId);\n            } else {\n                Question.questions[questionId].OnSave(elementId);\n            }\n        }\n\n\n        function checkRadioButton(id) {\n            // @ts-ignore\n            document.getElementById(id).checked = true;\n        }\n\n        // must cast as any to set property on window\n        // @ts-ignore\n        const _global = (window /* browser */ || global /* node */) as any;\n        _global.questionAnswered = questionAnswered;\n        _global.checkRadioButton = checkRadioButton;\n        return [];\n    }\n\n\n    public readonly question: QuestionDefinition;\n    private _changeHandler: Changes;\n    private readonly _qId;\n    public skippedElements: string[] = [];\n\n    constructor(\n        changeHandler: Changes,\n        question: QuestionDefinition) {\n\n        this.question = question;\n\n        this._qId = Question.questions.length;\n        this._changeHandler = changeHandler;\n        Question.questions.push(this);\n    }\n\n    /**\n     * SHould this question be asked?\n     * Returns false if question is already there or if a premise is missing\n     */\n    public Applicable(tags): boolean {\n\n        if (this.skippedElements.indexOf(tags.id) >= 0) {\n            return false;\n        }\n        \n        return this.question.isApplicable(tags);\n    }\n\n    /**\n     *\n     * @param elementId: the OSM-id of the element to perform the change on, format 'way/123', 'node/456' or 'relation/789'\n     * @constructor\n     */\n    protected OnSave(elementId: string) {\n        let tagsToApply: { k: string, v: string }[] = [];\n        const q: QuestionDefinition = this.question;\n        let tp = this.question.type;\n        if (tp === \"radio\") {\n            const selected = document.querySelector('input[name=\"q' + this._qId + '\"]:checked');\n            if (selected === null) {\n                console.log(\"No answer selected\");\n                return\n            }\n            let index = (selected as any).value;\n            tagsToApply = q.answers[index].tags;\n        } else if (tp === \"text\") {\n            // @ts-ignore\n            let value = document.getElementById(\"q-\" + this._qId + \"-textbox\").value;\n            if (value === undefined || value.length < 3) {\n                console.log(\"Answer too short\");\n                return;\n            }\n            tagsToApply = [{k: q.key, v: value}];\n        } else if (tp === \"radio+text\") {\n            const selected = document.querySelector('input[name=\"q' + this._qId + '\"]:checked');\n            if (selected === null) {\n                console.log(\"No answer selected\");\n                return\n            }\n            let index = (selected as any).value;\n            if (index < q.answers.length) {\n                // A 'proper' answer was selected\n                tagsToApply = q.answers[index].tags;\n            } else {\n                // The textfield was selected \n                // @ts-ignore\n                let value = document.getElementById(\"q-\" + this._qId + \"-textbox\").value;\n                if (value === undefined || value.length < 3) {\n                    console.log(\"Answer too short\");\n                    return;\n                }\n                tagsToApply = [{k: q.key, v: value}];\n            }\n\n        }\n\n        console.log(tagsToApply);\n\n        for (const toApply of tagsToApply) {\n            this._changeHandler.addChange(elementId, toApply.k, toApply.v);\n        }\n        \n    }\n\n    /**\n     * Creates the HTML question for this tag collection\n     */\n    public CreateHtml(tags: UIEventSource<any>): UIElement {\n        return new QuestionUI(this, this._qId, tags);\n    }\n\n\n    private Skip(elementId: any) {\n        this.skippedElements.push(elementId);\n        console.log(\"SKIP\");\n        // Yeah, this is cheating below\n        // It is an easy way to notify the UIElement that something has changed\n        this._changeHandler._allElements.getElement(elementId).ping();\n    }\n}"]}