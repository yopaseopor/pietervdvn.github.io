{"version":3,"sources":["UI/UIEventSource.ts","Logic/ElementStorage.ts"],"names":[],"mappings":";;;;;;ACAA;ADAA,IAAA,aAAA;AAAA;AAAA,YAAA;ACGA,ADEI,ICFJ,ODEI,QCFJ,GAAA,EDEI,CAAY,ICFhB,ADEI,CCFJ,CDEuB,oBCFvB,CAAA;ADAY,SAAA,UAAA,GAAa,EAAb;ACEZ,ADCQ,ICDR,KDCa,IAAL,GAAY,ECDpB,EDCQ;ACDR,ADEK;ACFL,YAAA;AAII,ADCO,EAAA,SCDP,IDCO,CAAA,SCDP,ADCO,CAAA,ECDP,SDCO,GAAP,UAAmB,QAAnB,EAA0C;ACHlC,ADIJ,SCJI,ADIC,SCJD,CDIJ,CAAgB,CCJA,EAAZ,CDIJ,CAAqB,QAArB;ACAH,ADCA,GAFM;;ACGP,ADCO,ECDP,ADCO,aAAA,CCDP,ADCO,CCDP,QDCO,CCDP,ADCO,CCDP,MDCO,GAAP,KCDA,GAAA,EDCe,CAAf,EAAoB,KCDL,EAAf,EAA2B,WAA3B,EAA2D;AACvD,ADCA,QAAG,CCDE,IDCG,IAAL,CCDH,CAAe,EAAf,CDCiB,CAAjB,ECDqB,ADCF,WCDnB;AACH,ADCO,GCHR;ADIK;ACAL,EAAA,cAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAAkB;AACd,ADAA,QCAM,CDAD,IAAL,GAAY,CAAZ,ECAiB,GAAG,IAAI,eAAA,CAAA,aAAJ,CAAuB,OAAO,CAAC,UAA/B,CAApB;AACA,ADAA,SCAK,ADAA,IAAL,KCAA,CAAe,OAAO,CAAC,UAAR,CAAmB,EAAlC,IAAwC,WAAxC;AACA,ADAH,GANM,QCMI,WAAP;AACH,GAJD;ADKO,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;ACCA,ADAI,ECAJ,ODAQ,IAAI,CAAR,ECAJ,CAAA,CDAiB,KAAK,GCAtB,CAAA,MDAI,EAA6B,OCAjC,GAAA,UAAgB,OAAhB,EAA4B;AACxB,ADAI,QCAE,GDAG,MCAM,GAAG,CDAd,CAAgB,CAAhB,ICAqB,CAAC,UAAR,CAAmB,EAArC;ADCC;ACAD,ADCH,GAJM,KCGC,SAAS,IAAI,KAAK,SAAtB,EAAiC;AAC7B,aAAO,KAAK,SAAL,CAAe,SAAf,CAAP;AACH,ADET,KCJQ,IDIR,ECFa,WDEb;ACDY,AD5BZ,CAAA,EAAA,UC4BmB,KAAK,UAAL,CAAgB,OAAhB,CAAP;AACH;AACJ,AD9BQ,GCuBT,IDvBS,CAAA,aAAA,GAAA,aAAA;;ACgCT,EAAA,cAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,SAAX,EAAoB;AAChB,QAAI,SAAS,IAAI,KAAK,SAAtB,EAAiC;AAC7B,aAAO,KAAK,SAAL,CAAe,SAAf,CAAP;AACH;;AACD,IAAA,OAAO,CAAC,GAAR,CAAY,mCAAZ,EAAiD,SAAjD;AACH,GALD;;AAQJ,SAAA,cAAA;AAnCA,CAAA,EAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","file":"ElementStorage.js","sourceRoot":"..","sourcesContent":["export class UIEventSource<T>{\n    \n    public data : T;\n    private _callbacks = [];\n    \n    constructor(data :T){\n        this.data = data;\n    }\n    \n    \n    public addCallback(callback : (() => void)){\n        this._callbacks.push(callback);\n    }\n    \n    public setData(t : T) : void{\n        if(this.data === t){\n            return;\n        }\n        this.data = t;\n        this.ping();\n    }\n    \n    public ping():void{\n        for(let i in this._callbacks){\n            this._callbacks[i]();\n        }\n    }\n\n\n}","/**\n * Keeps track of a dictionary 'elementID' -> element\n */\nimport {UIEventSource} from \"../UI/UIEventSource\";\n\nexport class ElementStorage{\n    \n    private _elements = [];\n    \n    constructor(){\n        \n    }\n    \n    addElementById(id: string, eventSource : UIEventSource<any>){\n        this._elements[id] = eventSource;\n    }\n    \n    addElement(element) : UIEventSource<any>{\n        const eventSource = new UIEventSource<any>(element.properties);\n        this._elements[element.properties.id] = eventSource;\n        return eventSource;\n    }\n\n    addOrGetElement(element: any) {\n        const elementId = element.properties.id;\n        if (elementId in this._elements) {\n            return this._elements[elementId];\n        }else{\n            return this.addElement(element);\n        }\n    }\n    \n    getElement(elementId) : UIEventSource<any>{\n        if (elementId in this._elements) {\n            return this._elements[elementId];\n        }\n        console.log(\"Can not find eventsource with id \", elementId);\n    }\n\n\n}"]}